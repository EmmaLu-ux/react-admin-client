{"version":3,"sources":["assets/images/logo.jpeg","api/ajax.js","api/index.js","utils/storageUtils.js","redux/actions.js","redux/action-types.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/LeftNav.jsx","utils/dateUtils.js","components/link-button/index.jsx","components/header/index.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/product/pictures-wall.jsx","utils/constants.js","pages/product/rich-text-editor.jsx","utils/memoryUtils.js","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/home.jsx","pages/product/product.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/charts/bar.jsx","pages/charts/pie.jsx","pages/charts/line.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.jsx","redux/reducer.js","redux/store.js","index.jsx"],"names":["module","exports","ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","BASE","reqLogin","username","password","reqGetCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProduct","pageNum","pageSize","reqSearchProduct","searchName","searchType","reqACategory","reqUpdateProduct","productId","status","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","reqWeather","city","console","log","jsonp","param","err","lives","weather","winddirection","windpower","humidity","store","set","remove","setHeadTitle","headTitle","receiveUser","logout","storageUtils","Login","handleSubmit","event","preventDefault","props","form","validateFields","values","login","this","to","getFieldDecorator","className","onSubmit","Item","rules","required","whitespace","min","max","pattern","prefix","style","color","size","allowClear","placeholder","htmlType","Component","WrapLogin","create","connect","state","dispatch","result","msg","menuList","title","key","icon","isPublic","children","SubMenu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes","path","location","pathname","reduce","pre","cItem","openKey","push","onClick","menuNodes","src","logo","alt","selectedKeys","defaultOpenKeys","mode","theme","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","i","confirm","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","okText","cencelText","okType","onOk","onCancel","clearInterval","RangePicker","Step","Home","noTitleKey","tabBarExtraContent","defaultValue","moment","format","value","precision","valueStyle","suffix","height","width","month","temperature","scale","range","autoFit","marker","symbol","x","y","radius","r","fill","label","formatter","val","domStyles","boxShadow","backgroundColor","crosshairs","position","shape","stroke","lineWidth","tabList","tab","activeTabKey","onTabChange","sales","progressDot","current","direction","description","Option","AddForm","setForm","categorys","initialValue","map","c","UpdateForm","Category","loading","subCategorys","parentName","showStatus","initColums","columns","dataIndex","render","category","showUpdate","showSubCategory","getCategorys","showCategory","updateCategory","resetFields","showAdd","addCategory","handleCancel","marginRight","extra","borderRadius","border","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","cancelText","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","fileList","getImgs","handlePreview","preview","originFileObj","handleChange","length","success","imgs","img","index","uid","uploadButton","action","accept","listType","onPreview","onChange","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","getDetail","draftToHtml","convertToRaw","getCurrentContent","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","isLeaf","isUpdate","pCategoryId","childOptions","option","loadData","selectedOptions","targetOption","submit","desc","price","categoryIds","pw","editor","history","goBack","validatePrice","callback","React","createRef","memoryUtils","formItemLayout","labelCol","span","wrapperCol","fontSize","autoSize","minRows","maxRows","validator","addonAfter","ref","marginLeft","PureComponent","ProductDetail","cName1","cName2","getCategoryName","all","results","dangerouslySetInnerHTML","__html","ProductHome","total","updateStatus","showDetails","getProduct","list","margin","e","target","Product","component","exact","UserForm","roles","phone","email","role_id","User","users","isShow","initColumns","roleNames","deleteUser","initRoleName","getUsers","addOrUpdateUser","getFieldsValue","AddForm2","TreeNode","AuthForm","onCheck","checkedKeys","getTreeNodes","getMenus","treeNodes","nextProps","disabled","checkable","defaultExpandAll","Role","isShowAdd","isShowAuth","getRoles","onRow","addRole","updateRole","auth","auth_name","auth_time","rowSelection","selectedRowKeys","onSelect","Bar","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","left","top","textStyle","trigger","visualMap","show","inRange","colorLightness","center","sort","a","b","roseType","labelLine","lineStyle","smooth","length2","itemStyle","shadowBlur","shadowColor","animationType","animationEasing","animationDelay","idx","Math","random","getOption2","subtext","orient","emphasis","shadowOffsetX","NotFound","goHome","replace","Footer","Sider","Content","Admin","minHeight","from","Pie","Line","textAlign","App","initUser","combineReducers","preState","errorMsg","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e010c7a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.632662aa.jpeg\";","import axios from 'axios'\nimport {message} from 'antd'\n\nexport default function ajax(url, data={}, type=\"GET\"){\n\n    return new Promise((resolve, reject) => {\n        let promise\n        //执行异步ajax请求\n        if(type === \"GET\"){ //发送GET请求\n            promise =  axios.get(url, { //配置对象\n                params: data //指定请求参数\n            })\n        }else{ //发送POST请求\n            promise =  axios.post(url, data)\n        }\n        //如果成功了，调用resolve（value）\n        promise.then(response => {\n            resolve(response.data)\n            //如果失败了，不调用reject（reason），而是提示异常信息\n        }).catch(error => {\n            message.error('请求失败！'+ error.message)\n        })\n    })\n}","import ajax from \"./ajax\"\nimport jsonp from 'jsonp'\nimport { message } from \"antd\"\n\nconst BASE = '/api'\n//用户登录\nexport const reqLogin = (username, password) => ajax(BASE + '/login', { username, password }, 'POST')\n\n//获取一级/二级分类的列表\nexport const reqGetCategorys = (parentId) => ajax(BASE + '/manage/category/list', { parentId })\n//添加分类\nexport const reqAddCategory = (parentId, categoryName) => ajax(BASE + '/manage/category/add', { parentId, categoryName }, 'POST')\n//更新分类\nexport const reqUpdateCategory = (categoryId, categoryName) => ajax(BASE + '/manage/category/update', { categoryId, categoryName }, 'POST')\n\n//获取商品分页列表\nexport const reqProduct = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', { pageNum, pageSize })\n\n//搜索商品分页列表(根据商品名称/描述)\n/* searchType: 搜索的类型：productName/productDesc\nsearchName: 搜索的关键字\n*/\nexport const reqSearchProduct = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/manage/product/search',\n    {\n        pageNum,\n        pageSize,\n        [searchType]: searchName\n    })\n\n//获取一个分类\nexport const reqACategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\n\n//更新商品的状态(上架/下架)\nexport const reqUpdateProduct = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\n\n//删除图片\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\n\n//添加/更新商品\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + (product._id?'update':'add'), product, 'POST')\n\n// //更新商品\n// export const reqUpdateAProduct = (product) => ajax('/manage/product/update', product, 'POST')\n\n//获取所有角色列表\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\n\n//添加角色\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\n\n//更新角色\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\n\n//获取用户列表\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\n\n//删除用户\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\n\n// 添加/更新用户\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/' + (user._id ? 'update' : 'add'), user, \"POST\")\n\n// 获取天气\nexport const reqWeather = (city) => {\n    return new Promise((resolve, reject) => {\n        // const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p4 9MVra6urFRGOT9s8UBWr2`\n        const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${city}&key=65e76fc0f42384fc309cc50221644787`\n        console.log('url')\n        // debugger\n        jsonp(url, {\n            param: 'callback'\n        }, (err, data) => {\n            console.log(data)\n            if (!err && data.status === \"1\") {\n                const { weather, winddirection, windpower, humidity } = data.lives[0]\n                console.log('text:', weather)\n                resolve({weather, winddirection, windpower, humidity})\n            } else {\n                message.error('获取天气信息失败!')\n            }\n\n        })\n    })\n}\n// reqWeather('北京')","/* 进行local数据存储管理的工具模块 */\nimport store from 'store'\n\nconst USER_KEY = 'user_key'\n\nexport default {\n    saveUser(user){\n    //     localStorage.setItem(USER_KEY, JSON.stringify(user))\n    return store.set(USER_KEY, user)\n    },\n    \n    getUser(){\n    //     return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\n    return store.get(USER_KEY)\n    },\n    deleteUser(){\n    //     localStorage.removeItem(USER_KEY)\n    return store.remove(USER_KEY)\n    },\n    saveProduct(product){\n        return store.set('product_key', product)\n    },\n    getProduct(){\n        return store.get('product_key')\n    }\n}","/* 包含n个action creator函数的模块\n同步action：对象 {type: 'xxx', data: 数据值}\n异步action：函数  dispatch => {} */\n\nimport {RECEIVE_USER, SET_HEAD_TITLE, SHOW_ERROR_MSG, RESET_USER} from './action-types'\nimport {reqLogin} from '../api/index'\nimport storageUtils from '../utils/storageUtils'\nimport { message } from 'antd'\n\n/* 设置头部标题的同步action */\nexport const setHeadTitle = (headTitle) => ({type: SET_HEAD_TITLE, data: headTitle})\n\n/* 接收用户信息的同步action */\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\n\n/* 显示错误信息的同步action */\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, errorMsg})\n\n/* 退出登录的同步action */\nexport const logout = () => {\n    //1. 删除local中的user\n    storageUtils.deleteUser()\n    //2. 返回action对象\n    return {type: RESET_USER}\n}\n\n/* 登录的异步action */\nexport const login = (username, password) => {\n    return async dispatch => {\n        //1. 执行异步ajax请求\n        const result = await reqLogin(username, password)\n        //2.1 如果成功，分发成功的同步action\n        if(result.status === 0){\n            const user = result.data\n            storageUtils.saveUser(user) //保存到local中去\n            dispatch(receiveUser(user))\n        }else{\n        //2.2 如果失败，分发失败的同步aciton\n            const msg = result.msg\n            // dispatch(showErrorMsg(msg))\n            message.error(msg)\n        }\n    }\n}","/* 包含n个action的type常量标识名称的模块 */\n\nexport const SET_HEAD_TITLE = 'set_head_title'\n\nexport const RECEIVE_USER = 'receive_user' //接收用户信息\n\nexport const SHOW_ERROR_MSG = 'show_error_message' //显示错误信息\n\nexport const RESET_USER = 'reset_user' //登出账户后删除用户信息","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport \"./login.less\";\nimport \"./login-1.less\"\n/* import { reqLogin } from \"../../api\";\nimport memoryUtils from '../../utils/memoryUtils'\nimport storageUtils from \"../../utils/storageUtils\"; */\nimport { Redirect } from \"react-router-dom\";\nimport { login } from \"../../redux/actions\";\n\nclass Login extends Component {\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /* const form = this.props.form;\n    const values = form.getFieldsValue();\n    console.log('@@', values) */\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        /* console.log(\"提交登录的ajax请求: \", values);\n        请求登录 */\n        const { username, password } = values;\n        /* const result = await reqLogin(username, password); //{status: 0, data: user}  {status: 1, data: msg}\n        // const result = response.data;\n        console.log(\"请求成功了\", result);\n        if (result.status === 0) {\n          //提示登录成功\n          console.log(\"登录成功！\");\n          message.success('登录成功！')\n\n          //获取到user，并存储到内存中\n          const user = result.data\n          memoryUtils.user = user //保存在内存中\n          storageUtils.saveUser(user) //保存到local中去\n          //跳转到管理界面\n          this.props.history.push(\"/home\");\n        } else {\n          message.error(result.msg);\n        } */\n        //调用分发异步action的函数 => 发登录的异步请求，有了结果后更新状态\n        this.props.login(username, password);\n      } else {\n        console.log(\"校验不通过！\");\n      }\n    });\n  };\n  render() {\n    //如果用户已经登陆, 自动跳转到管理界面\n    // const user = memoryUtils.user\n    const user = this.props.user;\n    if (user && user._id) {\n      return <Redirect to=\"/home\" />;\n    }\n    // const errorMsg = this.props.user.errorMsg;\n    const form = this.props.form;\n    const { getFieldDecorator } = form;\n    return (\n      <div className=\"login\">\n        <section className=\"login-content\">\n          <div className=\"login-Image\"></div>\n          <div className=\"login-Info\">\n            <h2>欢迎登录</h2>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <Form.Item>\n                { getFieldDecorator(\"username\", {\n                  rules: [\n                    {\n                      required: true,\n                      whitespace: false,\n                      message: \"请输入您的用户名!\",\n                    },\n                    { min: 4, message: \"用户名至少4位!\" },\n                    { max: 12, message: \"用户名最多12位!\" },\n                    {\n                      pattern: /^[a-zA-Z0-9_]+$/,\n                      message: \"用户名必须是字母、数字或下划线!\",\n                    },\n                  ],\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.5)\" }} />\n                    }\n                    size=\"large\"\n                    allowClear={true}\n                    placeholder=\"请输入用户名\"\n                    className=\"login-form-input\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"password\", {\n                  rules: [\n                    {\n                      required: true,\n                      whitespace: false,\n                      message: \"请输入您的用户名!\",\n                    },\n                    { min: 4, message: \"用户名至少4位!\" },\n                    { max: 12, message: \"用户名最多12位!\" },\n                    {\n                      pattern: /^[a-zA-Z0-9_]+$/,\n                      message: \"用户名必须是字母、数字或下划线!\",\n                    },\n                  ],\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.5)\" }} />\n                    }\n                    size=\"large\"\n                    allowClear={true}\n                    type=\"password\"\n                    placeholder=\"请输入密码\"\n                    className=\"login-form-input\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  size=\"large\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  登录\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst WrapLogin = Form.create()(Login);\nexport default connect((state) => ({ user: state.user }), { login })(WrapLogin);\n","const  menuList = [\n    {\n        title: '首页',\n        key: '/home',\n        icon: 'home',\n        isPublic: true\n    },\n    {\n        title: '商品',\n        key: '/products',\n        icon: 'shopping',\n        children: [\n            {\n                title: '分类管理',\n                key: '/category',\n                icon: 'apartment'\n            },\n            {\n                title: '商品管理',\n                key: '/product',\n                icon: 'pie-chart'\n            }\n        ]\n    },\n    {\n        title: '用户管理',\n        key: '/user',\n        icon: 'user'\n    },\n    {\n        title: '角色管理',\n        key: '/role',\n        icon: 'usergroup-add'\n    },\n    {\n        title: '图形图表',\n        key: '/charts',\n        icon: 'area-chart',\n        children: [\n            {\n                title: '柱形图',\n                key: '/bar',\n                icon: 'bar-chart'\n            },\n            {\n                title: '折线图',\n                key: '/line',\n                icon: 'line-chart'\n            },\n            {\n                title: '饼图',\n                key: '/pie',\n                icon: 'pie-chart'\n            }\n        ]\n    }\n]\nexport default menuList","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu, Icon } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport \"./LeftNav.less\";\nimport logo from \"../../assets/images/logo.jpeg\";\nimport menuList from \"../../config/menuConfig.js\";\n// import memoryUtils from \"../../utils/memoryUtils\";\nimport { setHeadTitle } from \"../../redux/actions\";\n\nconst { SubMenu } = Menu;\n\nclass LeftNav extends Component {\n  /* 判断当前登录用户对item是否有访问权限 */\n  hasAuth = (item) => {\n    const { key, isPublic } = item;\n    // const menus = memoryUtils.user.role.menus;\n    const menus = this.props.user.role.menus;\n    // const username = memoryUtils.user.username;\n    const username = this.props.user.username;\n    \n    //1. 如果当前用户是admin\n    //3. 如果当前item是公开的\n    //2. 当前用户有此item的权限：key有没有在menus中\n    if (username === \"admin\" || isPublic || menus.indexOf(key) !== -1) {\n      return true;\n    } else if (item.children) {\n      //如果当前用户有此item的某个子item的权限\n      return !!item.children.find((child) => menus.indexOf(child.key) !== -1);\n    }\n    return false;\n  };\n  /* 根据menu的数据数组生成对应的标签数组 */\n  getMenuNodes = (menuList) => {\n    //得到当前请求的路径\n    const path = this.props.location.pathname;\n    return menuList.reduce((pre, item) => {\n      //如果当前用户有item对应的权限，才需要显示对应的菜单项\n      if (this.hasAuth(item)) {\n        if (!item.children) { // 如果只有一级路由\n          if (item.key === path || path.indexOf(item.key) === 0) {\n            //更新redux中headTitle的状态\n            this.props.setHeadTitle(item.title);\n          }\n          pre.push((\n            <Menu.Item\n              key={item.key}\n              onClick={() => this.props.setHeadTitle(item.title)}\n            >\n              <Link to={item.key}>\n                <Icon type={item.icon} />\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          ));\n        } else { // 如果有不止一级路由\n          //查找一个与当前请求路径相匹配的子item\n          const cItem = item.children.find(\n            (cItem) => path.indexOf(cItem.key) === 0\n          );\n          if (cItem) {\n            //如果存在，说明当前item的子列表需要打开\n            this.openKey = item.key;\n          }\n          \n          pre.push((\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n                  <Icon type={item.icon} />\n                  <span>{item.title}</span>\n                </span>\n              }\n            >\n              {this.getMenuNodes(item.children)}\n            </SubMenu>\n          ));\n        }\n      }\n      return pre;\n    }, []);\n  };\n  // 在第一次render()之前执行一次\n  // 为第一个render准备数据（同步）\n  componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n  render() {\n    //得到当前请求的路径，使得默认选中菜单项的某一个\n    let path = this.props.location.pathname;\n    if (path.indexOf(\"/product\") === 0) {   //说明当前请求的是商品或商品的子路由\n      path = \"/product\";\n    }\n\n    //得到需要打开菜单项的key\n    const openKey = this.openKey;\n    return (\n      <div to=\"/\" className=\"left-nav\">\n        <Link to=\"/\" className=\"left-nav-header\">\n          <img src={logo} alt=\"logo\" />\n          <h1>XXX后台</h1>\n        </Link>\n        <Menu\n          selectedKeys={[path]} /* 动态显示选中的菜单项，defaultSelectedKeys不能做到，它只能匹配第一次请求的路径，后面不会再改变 */\n          defaultOpenKeys={[openKey]}\n          mode=\"inline\"\n          theme=\"light\"\n        >\n          {this.menuNodes}\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default connect((state) => ({ user: state.user }), { setHeadTitle })(\n  withRouter(LeftNav)\n);\n","\n\n\nexport function formateDate(time) {\n    if (!time) return ''\n    let date = new Date(time)\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n        + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\n}","import React from 'react'\nimport './index.less'\n\n/* 外形像链接的按钮 */\nexport default function LinkButton(props) {\n  return (\n    <button {...props}  className='link-button'></button>\n  )\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Modal } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport \"./index.less\";\nimport { formateDate } from \"../../utils/dateUtils.js\";\n// import memoryUtils from \"../../utils/memoryUtils\";\n// import storageUtils from '../../utils/storageUtils'\nimport { reqWeather } from \"../../api/index\";\nimport LinkButton from \"../link-button\";\nimport { logout } from \"../../redux/actions\";\n\nconst { confirm } = Modal;\nclass Header extends Component {\n  state = {\n    currentTime: formateDate(Date.now()), //当前时间字符串\n    weather: \"\", //天气\n    winddirection: \"\", //西北风\n    windpower: \"\", //风力\n    humidity: \"\", //湿度\n  };\n  getTime = () => {\n    this.intervalId = setInterval(() => {\n      const currentTime = formateDate(Date.now());\n      this.setState({ currentTime });\n    }, 1000);\n  };\n  getWeather = async () => {\n    const {weather, winddirection, windpower, humidity} = await reqWeather(\"330100\");\n    this.setState({ weather, winddirection, windpower, humidity });\n  };\n  /* 在没有使用redux管理状态的时候获取标题的方法 */\n  // getTitle = () => {\n  //   //得到当前请求路径\n  //   const path = this.props.location.pathname;\n  //   let title;\n  //   menuList.forEach((item) => {\n  //     if (item.key === path) {\n  //       title = item.title;\n  //     } else if (item.children) {\n  //       const cItem = item.children.find((cItem) => path.indexOf(cItem.key) === 0);\n  //       if (cItem) {\n  //         title = cItem.title;\n  //       }\n  //     }\n  //   });\n  //   return title;\n  // };\n  logout = () => {\n    confirm({\n      title: \"确定退出登录吗?\",\n      okText: '确认',\n      cencelText: '取消',\n      okType: 'danger',\n      // content: 'Some descriptions',\n      onOk: () => {\n        console.log(\"确认\");\n        //删除保存的数据\n        // storageUtils.deleteUser()\n        // memoryUtils.user = {}\n        this.props.logout();\n        // 跳转到login界面\n        // this.props.history.replace('/login')\n      },\n      onCancel() {\n        console.log(\"取消\");\n      },\n    });\n  };\n  //第一次render之后执行一次，一般在此执行异步操作：发ajax/启动定时器\n  componentDidMount() {\n    this.getTime();\n    this.getWeather();\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const { currentTime, weather, winddirection, windpower, humidity } = this.state;\n    // const username = memoryUtils.user.username;\n    const username = this.props.user.username;\n    // const title = this.getTitle();\n    const title = this.props.headTitle; //用redux直接调用状态\n    return (\n      <div className=\"header-top\">\n        <div className=\"header-top-left\">\n          <div className=\"header-top-left-title\">{title}</div>\n            <div className=\"header-top-left-curTime\">{currentTime}</div>\n            <div className=\"header-top-left-Text\">{weather}, {winddirection}风{windpower}, 湿度: {humidity}</div>\n        </div>\n        <div className=\"header-top-right\">\n          <span>欢迎, {username}</span>\n          <LinkButton onClick={this.logout}>退出</LinkButton>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({ headTitle: state.headTitle, user: state.user }),\n  { logout }\n)(withRouter(Header));\n","import React, { Component } from \"react\";\nimport { Card, Statistic, Icon, DatePicker, Steps } from \"antd\";\nimport moment from 'moment'\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Legend,\n  Interval,\n} from \"bizcharts\";\nimport \"./home.less\";\n\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'YYYY/MM/DD'\nconst { Step } = Steps;\n/* 首页路由 */\nexport default class Home extends Component {\n  state = {\n    key: \"tab1\",\n    noTitleKey: \"article\",\n  };\n\n  render() {\n    const tabListNoTitle = [\n      {\n        key: \"article\",\n        tab: \"访问量\",\n      },\n      {\n        key: \"app\",\n        tab: \"销售量\",\n      },\n    ];\n    const data = [\n      {\n        month: \"Jan\",\n        city: \"a\",\n        temperature: 7,\n      },\n      {\n        month: \"Jan\",\n        city: \"b\",\n        temperature: 3.9,\n      },\n      {\n        month: \"Jan\",\n        city: \"c\",\n        temperature: 13.9,\n      },\n      {\n        month: \"Feb\",\n        city: \"a\",\n        temperature: 6.9,\n      },\n      {\n        month: \"Feb\",\n        city: \"b\",\n        temperature: 4.2,\n      },\n      {\n        month: \"Feb\",\n        city: \"c\",\n        temperature: 14.2,\n      },\n      {\n        month: \"Mar\",\n        city: \"a\",\n        temperature: 9.5,\n      },\n      {\n        month: \"Mar\",\n        city: \"b\",\n        temperature: 5.7,\n      },\n      {\n        month: \"Mar\",\n        city: \"c\",\n        temperature: 15.7,\n      },\n      {\n        month: \"Apr\",\n        city: \"a\",\n        temperature: 14.5,\n      },\n      {\n        month: \"Apr\",\n        city: \"b\",\n        temperature: 8.5,\n      },\n      {\n        month: \"Apr\",\n        city: \"c\",\n        temperature: 18.5,\n      },\n      {\n        month: \"May\",\n        city: \"a\",\n        temperature: 18.4,\n      },\n      {\n        month: \"May\",\n        city: \"b\",\n        temperature: 11.9,\n      },\n      {\n        month: \"May\",\n        city: \"c\",\n        temperature: 21.1,\n      },\n      {\n        month: \"Jun\",\n        city: \"b\",\n        temperature: 21.5,\n      },\n      {\n        month: \"Jun\",\n        city: \"a\",\n        temperature: 15.2,\n      },\n      {\n        month: \"Jun\",\n        city: \"c\",\n        temperature: 25.4,\n      },\n      {\n        month: \"Jul\",\n        city: \"b\",\n        temperature: 27.2,\n      },\n      {\n        month: \"Jul\",\n        city: \"a\",\n        temperature: 17,\n      },\n      {\n        month: \"Jul\",\n        city: \"c\",\n        temperature: 9.2,\n      },\n      {\n        month: \"Aug\",\n        city: \"b\",\n        temperature: 26.5,\n      },\n      {\n        month: \"Aug\",\n        city: \"a\",\n        temperature: 16.6,\n      },\n      {\n        month: \"Aug\",\n        city: \"c\",\n        temperature: 18.2,\n      },\n      {\n        month: \"Sep\",\n        city: \"b\",\n        temperature: 23.3,\n      },\n      {\n        month: \"Sep\",\n        city: \"a\",\n        temperature: 14.2,\n      },\n      {\n        month: \"Sep\",\n        city: \"c\",\n        temperature: 28.3,\n      },\n      {\n        month: \"Oct\",\n        city: \"b\",\n        temperature: 18.3,\n      },\n      {\n        month: \"Oct\",\n        city: \"a\",\n        temperature: 10.3,\n      },\n      {\n        month: \"Oct\",\n        city: \"c\",\n        temperature: 20.3,\n      },\n      {\n        month: \"Nov\",\n        city: \"b\",\n        temperature: 13.9,\n      },\n      {\n        month: \"Nov\",\n        city: \"a\",\n        temperature: 6.6,\n      },\n      {\n        month: \"Nov\",\n        city: \"c\",\n        temperature: 16.6,\n      },\n      {\n        month: \"Dec\",\n        city: \"b\",\n        temperature: 9.6,\n      },\n      {\n        month: \"Dec\",\n        city: \"c\",\n        temperature: 4.8,\n      },\n      {\n        month: \"Dec\",\n        city: \"c\",\n        temperature: 14.8,\n      },\n    ];\n    const data1 = [\n      { month: \"1月\", sales: 120 },\n      { month: \"2月\", sales: 99 },\n      { month: \"3月\", sales: 90 },\n      { month: \"4月\", sales: 97 },\n      { month: \"5月\", sales: 170 },\n      { month: \"6月\", sales: 278 },\n      { month: \"7月\", sales: 330 },\n      { month: \"8月\", sales: 324 },\n      { month: \"9月\", sales: 88 },\n      { month: \"10月\", sales: 68 },\n      { month: \"11月\", sales: 98 },\n      { month: \"12月\", sales: 78 },\n    ];\n    const cols = {\n      month: {\n        range: [0, 1],\n      },\n    };\n    const tabBarExtraContent = (\n      <RangePicker\n        defaultValue={[\n          moment(\"2022/11/20\", dateFormat),\n          moment(\"2022/11/21\", dateFormat),\n        ]}\n        format={dateFormat}\n      />\n    );\n    return (\n      <div>\n        <div className=\"div-card-chart\">\n          <Card title=\"商品总量\" className=\"card-product\">\n            <Statistic\n              title=\"周同比\"\n              value={21.65}\n              precision={2}\n              valueStyle={{ color: \"#3f8600\" }}\n              prefix={<Icon type=\"arrow-up\" />}\n              suffix=\"%\"\n            />\n            <Statistic\n              title=\"日同比\"\n              value={9.31}\n              precision={2}\n              valueStyle={{ color: \"#cf1322\" }}\n              prefix={<Icon type=\"arrow-down\" />}\n              suffix=\"%\"\n            />\n          </Card>\n          <Chart\n            height={250}\n            width={800}\n            className=\"chart-line\"\n            data={data}\n            scale={cols}\n            autoFit\n          >\n            <Legend\n              marker={{\n                symbol: (x, y, radius) => {\n                  const r = radius / 2;\n                  return [\n                    [\"M\", x - radius, y],\n                    [\"A\", r, r, 0, 0, 1, x, y],\n                    [\"A\", r, r, 0, 0, 0, x + radius, y],\n                  ];\n                },\n                style: {\n                  fill: \"\",\n                },\n              }}\n            />\n            <Axis name=\"month\" />\n            <Axis\n              name=\"temperature\"\n              label={{\n                formatter: (val) => `${val}万个`,\n              }}\n            />\n            <Tooltip\n              domStyles={{\n                \"g2-tooltip\": {\n                  boxShadow: \"none\",\n                  color: \"#fff\",\n                  backgroundColor: \"#222\",\n                },\n              }}\n              crosshairs={{\n                type: \"y\",\n              }}\n              style={{\n                color: \"red\",\n              }}\n            />\n            <Geom\n              type=\"line\"\n              position=\"month*temperature\"\n              size={2}\n              color={\"city\"}\n            />\n            <Geom\n              type=\"point\"\n              position=\"month*temperature\"\n              size={4}\n              shape={\"circle\"}\n              color={\"city\"}\n              style={{\n                stroke: \"#fff\",\n                lineWidth: 1,\n              }}\n            />\n          </Chart>\n        </div>\n        <Card\n          tabBarExtraContent={tabBarExtraContent}\n          className=\"div-card2\"\n          tabList={tabListNoTitle}\n          activeTabKey={this.state.noTitleKey}\n          onTabChange={(key) => {\n            this.onTabChange(key, \"noTitleKey\");\n          }}\n        >\n          <Card title=\"访问趋势\" style={{ width: 700 }} className=\"fangwenqushi\">\n            <Chart height={300} data={data1} autoFit>\n              <Interval position=\"month*sales\" />\n            </Chart>\n          </Card>\n          <Card title=\"任务\" style={{width: 250}} className=\"renwu\">\n            <Steps progressDot current={1} direction=\"vertical\" size=\"small\">\n              <Step title=\"新版本迭代会\" />\n              <Step title=\"完成网站设计初版\" />\n              <Step title=\"联调接口\" description=\"功能验收\" />\n              <Step title=\"登录功能设计\" description=\"权限验证\" />\n            </Steps>\n          </Card>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Select, Input } from \"antd\";\nimport PropTypes from 'prop-types'\n\nconst Item = Form.Item;\nconst Option = Select.Option;\n/* 添加分类的form组件 */\nclass AddForm extends Component {\n  static propTypes = {\n    setForm: PropTypes.func.isRequired,\n    categorys: PropTypes.array.isRequired,\n    parentId: PropTypes.string.isRequired\n  }\n  componentWillMount(){\n    this.props.setForm(this.props.form)\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {parentId, categorys} = this.props\n    return (\n      <Form>\n        <Item>\n          {getFieldDecorator(\"parentId\", {\n            initialValue: parentId,\n          })(\n            <Select>\n              <Option value=\"0\">一级分类</Option>\n              {\n                categorys.map(c => <Option value={c._id}>{c.name}</Option>)\n              }\n            </Select>\n          )}\n        </Item>\n        <Item>\n          {getFieldDecorator(\"categoryName\", {\n            initialValue: \"\",\n            rules: [\n              {required: true, message: '分类名称必须输入！'}\n            ]\n          })(<Input placeholder=\"请输入分类名称\"></Input>)}\n        </Item>\n      </Form>\n    );\n  }\n}\nexport default Form.create()(AddForm);\n","import React, { Component } from \"react\";\nimport { Form, Input } from \"antd\";\nimport PropTypes from 'prop-types'\n\nconst Item = Form.Item;\n/* 更新分类的form组件 */\nclass UpdateForm extends Component {\n  static propTypes = {\n    categoryName: PropTypes.string.isRequired,\n    setForm: PropTypes.func.isRequired\n  }\n  componentWillMount(){\n    //将form对象通过setForm方法传递给父组件\n    this.props.setForm(this.props.form)\n  }\n  render() {\n    const {categoryName} = this.props\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form>\n        <Item>\n          {getFieldDecorator(\"categoryName\", {\n            initialValue: categoryName ,\n            rules: [\n              {required: true, message: '分类名称必须输入！'}\n            ]\n          })(<Input placeholder=\"请输入分类名称\"></Input>)}\n        </Item>\n      </Form>\n    );\n  }\n}\nexport default Form.create()(UpdateForm);","import React, { Component } from \"react\";\nimport { Card, Icon, Button, Table, message, Modal } from \"antd\";\n\nimport LinkButton from \"../../components/link-button\";\nimport { reqAddCategory, reqGetCategorys, reqUpdateCategory } from \"../../api\";\nimport AddForm from \"./add-form\";\nimport UpdateForm from \"./update-form\";\n\n/* 商品分类路由 */\nexport default class Category extends Component {\n  state = {\n    loading: false, //是否正在获取列表中\n    categorys: [], //一级分类列表\n    subCategorys: [], //二级分类列表\n    parentId: \"0\", //当前需要显示的分类列表的父分类ID\n    parentName: \"\", //当前需要显示的分类列表的父分类名称\n    showStatus: 0, //0：不显示Modal框，1: 显示添加分类Modal框，2:显示修改分类Modal框\n  };\n  /* 初始化Table所有列的数组 */\n  initColums = () => {\n    this.columns = [\n      {\n        title: \"分类的名称\",\n        dataIndex: \"name\",\n        key: \"name\",\n      },\n      {\n        title: \"操作\",\n        width: 300,\n        render: (category) => (\n          <span>\n            <LinkButton onClick={() => this.showUpdate(category)}>\n              修改分类\n            </LinkButton>\n            {this.state.parentId === \"0\" ? (\n              <LinkButton onClick={this.showSubCategory(category)}>\n                查看子分类\n              </LinkButton>\n            ) : null}\n          </span>\n        ),\n      },\n    ];\n  };\n  //获取一级/二级分类列表\n  //parentId: 没有指定的话就根据状态中的值请求，指定的话就用指定的值\n  getCategorys = async (parentId) => {\n    console.log(\"getCategorys\");\n    //发送请求前，显示loading\n    this.setState({ loading: true });\n    // const { parentId } = this.state;\n    parentId = parentId || this.state.parentId;\n    const result = await reqGetCategorys(parentId);\n    //请求结束后，隐藏loading\n    this.setState({ loading: false });\n    if (result.status === 0) {\n      //取出分类数组（可能是一级，也可能是二级）\n      const categorys = result.data;\n      //更新二级分类\n      if (parentId !== \"0\") {\n        this.setState({ subCategorys: categorys });\n      } else {\n        //更新一级分类\n        this.setState({ categorys });\n      }\n    } else {\n      message.error(\"获取分类列表失败！\");\n    }\n  };\n  // 显示指定一级分类对象的二级子分类\n  showSubCategory = (category) => {\n    return () => {\n      //更新状态\n      this.setState(\n        {\n          parentId: category._id,\n          parentName: category.name,\n        },\n        () => {\n          //在状态更新且重新render()后执行\n          //setState()不能立即获取最新状态，因为setState是异步更新的\n          console.log(\"parentId\", this.state.parentId);\n          //获取二级分类列表显示\n          this.getCategorys();\n        }\n      );\n    };\n  };\n  // 显示指定一级分类列表\n  showCategory = () => {\n    // 更新为显示一级列表的状态\n    this.setState({\n      parentId: \"0\",\n      parentName: \"\",\n      subCategorys: [],\n    });\n  };\n  //点击“修改分类”LinkButton后，显示修改/更新的确认框\n  showUpdate = (category) => {\n    //保存分类对象，供render函数用\n    this.category = category;\n    this.setState({\n      showStatus: 2,\n    });\n  };\n  //修改分类\n  updateCategory = async () => {\n    console.log(\"updateCategory()\");\n    // 先进行表单验证，验证通过后才能往下走\n    this.form.validateFields(async (err, values) => {  //values: 所有表单数据的对象\n      if (!err) {\n        // 1. 隐藏确认框\n        this.setState({\n          showStatus: 0,\n        });\n        // 准备数据\n        const categoryId = this.category._id;\n        // const { categoryName } = this.form.getFieldsValue();\n        const { categoryName } = values;\n        this.form.resetFields();\n        // 2. 发送请求更新分类\n        const result = await reqUpdateCategory(categoryId, categoryName);\n        if (result.status === 0) {\n          // 3. 重新显示列表\n          this.getCategorys();\n        }\n      } else {\n        message.error(\"表单验证不通过！\" + err.message);\n      }\n    });\n  };\n  //点击“添加”按钮后，显示添加分类的确认框\n  showAdd = () => {\n    this.setState({\n      showStatus: 1,\n    });\n  };\n  //添加分类\n  addCategory = () => {\n    console.log(\"addCategory()\");\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        //隐藏显示框\n        this.setState({\n          showStatus: 0,\n        });\n        // const { parentId, categoryName } = this.form.getFieldsValue();\n        const { parentId, categoryName } = values\n        this.form.resetFields();\n        //添加分类请求\n        const result = await reqAddCategory(parentId, categoryName);\n        if (result.status === 0) {\n          // 添加的分类就是当前分类列表下的分类\n          if (parentId === this.state.parentId) {\n            //重新获取当前分类列表显示\n            this.getCategorys();\n          } else if (parentId === \"0\") {\n            this.getCategorys(\"0\");\n          }\n        }\n      } else {\n        message.error(\"表单验证不通过！\" + err.message);\n      }\n    });\n  };\n  //响应点击取消：隐藏确定框\n  handleCancel = () => {\n    this.form.resetFields();\n    this.setState({\n      showStatus: 0,\n    });\n  };\n  //为第一次render准备数据\n  componentWillMount() {\n    this.initColums();\n  }\n  //发送异步ajax请求，生成列表数据内容\n  componentDidMount() {\n    this.getCategorys();\n  }\n  render() {\n    const {\n      categorys,\n      subCategorys,\n      parentId,\n      parentName,\n      loading,\n      showStatus,\n    } = this.state;\n    const category = this.category || {}; //如果还没有，指定一个空对象\n    const title =\n      parentId === \"0\" ? (\n        \"一级分类列表\"\n      ) : (\n        <span>\n          <LinkButton onClick={this.showCategory}>一级分类列表</LinkButton>\n          <Icon type=\"arrow-right\" style={{ marginRight: 5 }} />\n          <span>{parentName}</span>\n        </span>\n      );\n    const extra = (\n      <Button type=\"primary\" onClick={this.showAdd}>\n        <Icon type=\"plus\" />\n        添加\n      </Button>\n    );\n    return (\n      <Card\n        title={title}\n        extra={extra}\n        style={{ borderRadius: 15, border: \"none\" }}\n      >\n        <Table\n          rowKey=\"_id\"\n          // size=\"small\"\n          loading={loading}\n          dataSource={parentId === \"0\" ? categorys : subCategorys}\n          columns={this.columns}\n          pagination={{ defaultPageSize: 8, showQuickJumper: true }}\n        />\n        <Modal\n          title=\"添加分类\"\n          visible={showStatus === 1}\n          okText=\"确认\"\n          cancelText=\"取消\"\n          onOk={this.addCategory}\n          onCancel={this.handleCancel}\n        >\n          <AddForm\n            categorys={categorys}\n            parentId={parentId}\n            setForm={(form) => (this.form = form)}\n          />\n        </Modal>\n        <Modal\n          title=\"修改分类\"\n          visible={showStatus === 2}\n          okText=\"确认\"\n          cancelText=\"取消\"\n          onOk={this.updateCategory}\n          onCancel={this.handleCancel}\n        >\n          <UpdateForm\n            categoryName={category.name}\n            setForm={(form) => (this.form = form)}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Upload, Icon, Modal, message } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nimport { reqDeleteImg } from \"../../api\";\nimport {BASE_IMG_URL} from '../../utils/constants.js'\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n/* 用于图片上传的组件 */\nexport default class PicturesWall extends Component {\n  static propTypes = {\n    imgs: PropTypes.array,\n  };\n  state = {\n    previewVisible: false, //标识是否显示大图预览\n    previewImage: \"\", //大图的url\n    fileList: [\n        /* {\n          uid: \"-1\", //每个file都有自己唯一的id，建议设置为负数，防止和内部产生的id冲突\n          name: \"image.png\", //图片文件名\n          status: \"done\", //图片状态：done-已上传，uploading-正在上传中，removed-已删除，error-错误\n          url: \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\", //图片地址\n        }, */\n    ],\n  };\n\n  constructor(props) {\n    super(props);\n    let fileList = []\n    //如果传入了imgs\n    const {imgs} = this.props\n    if(imgs && imgs.length > 0){\n        fileList = imgs.map((img, index) => ({\n            uid: -index,\n            name: img,\n            status: 'done',\n            url: BASE_IMG_URL + img\n        }))\n    }\n    // 初始化状态\n    this.state = {\n      previewVisible: false, //标识是否显示大图预览\n      previewImage: \"\", //大图的url\n      fileList\n    };\n  }\n  /* 获取所有已上传图片文件名的数组 */\n  getImgs = () => {\n    return this.state.fileList.map(file => file.name);\n  };\n  /* 隐藏Modal */\n  handleCancel = () => this.setState({ previewVisible: false });\n  /* 显示指定file对应的大图 */\n  handlePreview = async (file) => {\n    console.log('handlePreview()')\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n  };\n  /* file: 当前操作的图片文件（上传/删除）\n  fileList: 所有已上传图片文件对象的数组 */\n  handleChange = async ({ file, fileList }) => {\n    console.log(\n      \"handleChange()\",\n      file.status,\n      fileList.length,\n      file === fileList[fileList.length - 1]\n    );\n    //一旦上传成功，将当前上传的file的信息修正(name, url)\n    if(file.status === \"done\") {\n      const result = file.response; //{status: 0, data: {name: xxx.webp, url: '图片地址'}}\n      console.log('result', result)\n      if(result.status === 0) {\n        message.success(\"上传图片成功！\");\n        const { name, url } = result.data;\n        file = fileList[fileList.length - 1];\n        file.name = name;\n        file.url = url;\n      } else {\n        message.error(\"上传图片失败！\");\n      }\n    } else if (file.status === \"removed\") {\n      //删除图片\n      const result = await reqDeleteImg(file.name);\n      console.log('result-removed', result)\n      if (result.status === 0) {\n        message.success(\"删除图片成功！\");\n      } else {\n        message.error(\"删除图片失败！\");\n      }\n    }\n    //在操作（上传/删除）过程中更新fileList的状态\n    this.setState({ fileList });\n  };\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div>Upload</div>\n      </div>\n    );\n    return (\n      <div>\n        <Upload\n          action=\"/api/manage/img/upload\" //上传图片的接口地址\n          accept=\"image/*\" //只接收图片类型的文件\n          name=\"image\" //请求参数名\n          listType=\"picture-card\" //卡片样式\n          fileList={fileList} //所有已上传图片文件对象的数组\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {fileList.length >= 3 ? null : uploadButton}\n        </Upload>\n        <Modal\n          visible={previewVisible}\n          footer={null}\n          onCancel={this.handleCancel}\n        >\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} /> {/* http://localhost:5000/upload/image-1668909123095.webp */}\n        </Modal>\n      </div>\n    );\n  }\n}\n","\nexport const PAGE_SIZE = 6 //每一页显示的记录数\n\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' ","import React, { Component } from \"react\";\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport PropTypes from \"prop-types\";\n\n/* 富文本编辑器---用来指定商品详情组件 */\nexport default class RichTextEditor extends Component {\n  static propTypes = {\n    detail: PropTypes.string,\n  };\n  state = {\n    editorState: EditorState.createEmpty(), //创建一个没有内容的编辑对象\n  };\n  constructor(props) {\n    super(props);\n    const html = this.props.detail;\n    // const contentBlock = htmlToDraft(html);\n    if (html) {  //如果有值，根据html格式字符串创建一个对应的编辑对象\n      const contentBlock = htmlToDraft(html);\n      if (contentBlock) {\n        const contentState = ContentState.createFromBlockArray(\n          contentBlock.contentBlocks\n        );\n        const editorState = EditorState.createWithContent(contentState);\n        this.state = {\n          editorState,\n        };\n      }\n    } else {\n      this.state = {\n        editorState: EditorState.createEmpty(),\n      };\n    }\n  }\n  /* 输入过程中实时的回调 */\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n  uploadImageCallBack = (file) => {\n    return new Promise((resolve, reject) => {\n      //发起上传图片的ajax请求\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", \"/api/manage/img/upload\");\n      const data = new FormData();\n      data.append(\"image\", file);\n      xhr.send(data);\n      xhr.addEventListener(\"load\", () => {\n        const response = JSON.parse(xhr.responseText);\n        const url = response.data.url //得到图片的url\n        // resolve(url);\n        resolve({data: {link: url}})\n      });\n      xhr.addEventListener(\"error\", () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    });\n  };\n  getDetail = () => {\n    //返回输入数据对应的html格式的文本\n    return draftToHtml(\n      convertToRaw(this.state.editorState.getCurrentContent())\n    );\n  };\n  render() {\n    const { editorState } = this.state;\n    return (\n      <Editor\n        editorState={editorState}\n        editorStyle={{\n          border: \"none\",\n          backgroundColor: \"rgb(247, 248, 252)\",\n          height: 200,\n          paddingLeft: 10,\n        }}\n        onEditorStateChange={this.onEditorStateChange}\n        toolbar={{\n          image: {\n            uploadCallback: this.uploadImageCallBack,\n            alt: { present: true, mandatory: true },\n          },\n        }}\n      />\n    );\n  }\n}\n","\nexport default {\n    user: {},\n    product: {}\n}","import React, { PureComponent } from \"react\"\nimport { Input, Card, Form, Cascader, Button, Icon, message } from \"antd\"\n\nimport LinkButton from \"../../components/link-button\"\nimport { reqGetCategorys, reqAddOrUpdateProduct } from \"../../api\"\nimport PicturesWall from \"./pictures-wall\"\nimport RichTextEditor from \"./rich-text-editor\"\nimport memoryUtils from \"../../utils/memoryUtils\"\n\nconst { Item } = Form\nconst { TextArea } = Input\n\n/* Product的添加和更新的子路由组件 */\nclass ProductAddUpdate extends PureComponent {\n  state = {\n    options: [],\n  }\n  constructor(props) {\n    super(props)\n    //创建用来保存ref标识的标签对象的容器\n    this.pw = React.createRef()\n    this.editor = React.createRef()\n  }\n  /* 根据categorys生成options数组 */\n  initOptions = async (categorys) => {\n    const options = categorys.map((c) => ({ //options数组的结构如下\n      value: c._id,\n      label: c.name,\n      isLeaf: false,\n    }))\n    /* 如果是一个二级分类商品的更新 */\n    const { isUpdate, product } = this\n    const { pCategoryId } = product\n    if (isUpdate && pCategoryId !== \"0\") {\n      //获取对应的二级分类列表\n      const subCategorys = await this.getCategorys(pCategoryId)\n      let childOptions\n      if (subCategorys && subCategorys.length > 0) {\n        //生成二级下拉列表的options\n        childOptions = subCategorys.map(c => ({\n          value: c._id,\n          label: c.name,\n          isLeaf: true,\n        }))\n      }\n      // 找到当前商品对应的一级option对象\n      const targetOption = options.find(\n        (option) => option.value === pCategoryId\n      )\n      //关联对应的一级option上\n      targetOption.children = childOptions\n    }\n    this.setState({ options })\n  }\n  /* 异步获取一级/二级分类列表，并显示\n  async函数的返回值是一个新的promise对象，promise的结果和值由async的结果来决定\n  */\n  getCategorys = async (parentId) => {\n    const result = await reqGetCategorys(parentId)\n\n    if (result.status === 0) {\n      const categorys = result.data\n      //如果是一级分类列表\n      if (parentId === \"0\") {\n        this.initOptions(categorys)\n      } else {\n        //如果是二级列表\n        return categorys //返回二级列表 => 当前async函数返回的promise就会成功且value为categorys\n      }\n    }\n    // return 1\n  }\n  /* 用于加载下一级列表的回调函数 */\n  loadData = async (selectedOptions) => {\n    //得到选择的option对象\n    const targetOption = selectedOptions[0]\n    //显示loading\n    targetOption.loading = true\n    //根据选中的分类，请求获取二级分类列表\n    /* async函数的返回值是一个新的promise对象，promise的结果和值由async的结果来决定 */\n    console.log('targetOption.value', targetOption.value)\n    const subCategorys = await this.getCategorys(targetOption.value)\n    console.log('subCategorys', subCategorys)\n    //隐藏loading\n    targetOption.loading = false\n    //如果二级分类数组有数据\n    if (subCategorys && subCategorys.length > 0) {\n      //生成一个二级列表的options\n      const childOptions = subCategorys.map(c => ({\n        value: c._id,\n        label: c.name,\n        isLeaf: true,\n      }))\n      //关联到当前options上\n      targetOption.children = childOptions\n    } else {\n      //当前选中的分类没有二级分类\n      targetOption.isLeaf = true\n    }\n    //更新options状态\n    this.setState({\n      options: [...this.state.options],\n    })\n    console.log('options', this.state.options)\n  }\n  submit = () => {\n    //进行表单验证，如果都通过了，才发送请求\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        //表单验证通过，可以发起ajax请求了\n        console.log(\"表单验证通过!\", values)\n        /* 收集数据，并封装成product对象 */\n        const { name, desc, price, categoryIds } = values\n        let pCategoryId, categoryId\n        if (categoryIds.length === 1) {\n          pCategoryId = \"0\"\n          categoryId = categoryIds[0]\n        } else {\n          pCategoryId = categoryIds[0]\n          categoryId = categoryIds[1]\n        }\n        console.log(pCategoryId, categoryId, categoryIds)\n        //获取图片\n        const imgs = this.pw.current.getImgs()\n        // console.log('imgs', imgs)\n        //获取富文本输入内容\n        const detail = this.editor.current.getDetail()\n        const product = {\n          name,\n          desc,\n          price,\n          imgs,\n          detail,\n          pCategoryId,\n          categoryId,\n        }\n        //如果是更新，需要添加_id\n        if (this.isUpdate) {\n          product._id = this.product._id\n        }\n\n        /* 调用接口请求函数去添加/更新 */\n        const result = await reqAddOrUpdateProduct(product)\n        // console.log('result', result.status)\n        if (result.status === 0) {\n          message.success(`${this.isUpdate ? \"更新\" : \"添加\"}商品成功！`)\n          this.props.history.goBack()\n        } else {\n          message.error(`${this.isUpdate ? \"更新\" : \"添加\"}商品失败！`)\n        }\n      } else {\n        message.error(\"表单验证不通过！\")\n      }\n    })\n  }\n  /* 验证价格的自定义验证函数 */\n  validatePrice = (rules, value, callback) => {\n    if (value * 1 > 0) {\n      callback() //验证通过\n    } else {\n      callback(\"价格必须大于0\") //验证没通过\n    }\n  }\n\n  componentDidMount() {\n    this.getCategorys(\"0\")\n  }\n  componentWillMount() {\n    const product = memoryUtils.product\n    //保存一个是否是更新的标识\n    //如果是添加，就没有值，否则就有值（修改商品）\n    this.isUpdate = !!product._id //变量前加两个感叹号：强制转换为布尔类型\n    this.product = product || {} //保存商品（如果没有，保存的是{}）\n  }\n  //在组件卸载之前清除保存的数据\n  componentWillUnmount(){\n    memoryUtils.product = {}\n  }\n  render() {\n    const { isUpdate, product } = this\n    const { pCategoryId, categoryId, imgs, detail } = product\n    const categoryIds = [] //用来接收级联分类的id\n    if (isUpdate) {\n      if (pCategoryId === \"0\") {\n        //商品是一个一级分类的商品\n        categoryIds.push(categoryId)\n      } else {\n        //商品是一个二级分类的商品\n        categoryIds.push(pCategoryId)\n        categoryIds.push(categoryId)\n      }\n    }\n    const formItemLayout = {\n      labelCol: { span: 2 },\n      wrapperCol: { span: 8 },\n    }\n    const title = (\n      <span>\n        <LinkButton onClick={() => this.props.history.goBack()}>\n          <Icon type=\"arrow-left\" style={{ fontSize: 20 }} />\n        </LinkButton>\n        <span>{isUpdate ? \"更新商品\" : \"添加商品\"}</span>\n      </span>\n    )\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Card title={title}>\n        <Form {...formItemLayout}>\n          <Item label=\"商品名称\">\n            {getFieldDecorator(\"name\", {\n              initialValue: product.name,\n              rules: [{ required: true, message: \"必须输入商品名称\" }],\n            })(<Input placeholder=\"请输入商品名称\" style={{border: \"none\", backgroundColor: \"rgb(247, 248, 252)\"}}/>)}\n          </Item>\n          <Item label=\"商品描述\">\n            {getFieldDecorator(\"desc\", {\n              initialValue: product.desc,\n              rules: [{ required: true, message: \"必须输入商品描述\" }],\n            })(\n              <TextArea\n                placeholder=\"请输入商品描述\"\n                autoSize={{ minRows: 2, maxRows: 6 }}\n                style={{border: \"none\", backgroundColor: \"rgb(247, 248, 252)\"}}\n              />\n            )}\n          </Item>\n          <Item label=\"商品价格\">\n            {getFieldDecorator(\"price\", {\n              initialValue: product.price,\n              rules: [\n                { required: true, message: \"必须输入商品价格\" },\n                { validator: this.validatePrice },\n              ],\n            })(<Input type=\"number\" placeholder=\"请输入商品价格\" addonAfter=\"元\" style={{border: \"none\", backgroundColor: \"rgb(247, 248, 252)\"}}/>)}\n          </Item>\n          <Item label=\"商品分类\">\n            {getFieldDecorator(\"categoryIds\", {\n              initialValue: categoryIds,\n              rules: [{ required: true, message: \"必须指定商品分类\" }],\n            })(\n              <Cascader\n                placeholder=\"请指定商品分类\"\n                options={this.state.options} /* 需要显示的列表数据数组 */\n                loadData={\n                  this.loadData\n                } /* 当选择某个列表项，加载下一级列表的监听回调 */\n                className=\"cascader-input\"\n              />\n            )}\n          </Item>\n          <Item label=\"商品图片\">\n            <PicturesWall ref={this.pw} imgs={imgs} />\n          </Item>\n          <Item\n            label=\"商品详情\"\n            labelCol={{ span: 2 }}\n            wrapperCol={{ span: 20 }}\n          >\n            <RichTextEditor ref={this.editor} detail={detail} />\n          </Item>\n          {/* <Item> */}\n            <Button type=\"primary\" onClick={this.submit} style={{marginLeft: \"94.5%\"}}>\n              提交\n            </Button>\n          {/* </Item> */}\n        </Form>\n      </Card>\n    )\n  }\n}\nexport default Form.create()(ProductAddUpdate)\n","import React, { Component } from \"react\";\nimport { Card, List, Icon } from \"antd\";\n\nimport LinkButton from \"../../components/link-button\";\nimport { BASE_IMG_URL } from \"../../utils/constants\";\nimport { reqACategory } from \"../../api/index\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtils from \"../../utils/storageUtils\";\n\n/* Product的详情页 */\nexport default class ProductDetail extends Component {\n  state = {\n    cName1: \"\", //一级分类名称\n    cName2: \"\", //二级分类名称\n  };\n  /*memoryUtils文件中的products结构如下： \n  {\n    \"status\": 1,\n    \"imgs\": [\n        \"华硕.webp\"\n    ],\n    \"_id\": \"6354f6c85853d86c8239581c\", // 此商品的id\n    \"categoryId\": \"6354f6b65853d86c8239581b\", // 二级分类id\n    \"pCategoryId\": \"6354f4895853d86c82395808\", // 一级分类id\n    \"name\": \"联想ThinkPad 翼4809\",\n    \"desc\": \"年度重量级新品，X390、T490全新登场 更加轻薄机身设计9\",\n    \"price\": 65999,\n    \"detail\": \"<p>想你所需，超你所想！精致外观，轻薄便携带光驱，内置正版office杜绝盗版死机，全国联保两年！ 222\\\\n</p>\\n<p>联想（Lenovo）扬天V110 15.6英寸家用轻薄便携商务办公手提笔记本电脑 定制【E2-9010/4G/128G固态】 2G独显 内置\\\\n</p>\\n<p>99999\\\\n</p>\\n\",\n    \"__v\": 0\n}\n  */\n  getCategoryName = async () => {\n    //得到当前商品的分类ID\n    const { pCategoryId, categoryId } = memoryUtils.product\n    if (pCategoryId === \"0\") {\n      //一级分类下的商品\n      const result = await reqACategory(categoryId);\n      console.log(\"result\", result); \n      const cName1 = result.data.name;\n      this.setState({ cName1 });\n    } else {\n      //二级分类下的产品\n      /* 通过多个await方式发送多个请求：后面一个请求是在前面一个请求成功返回之后才发送请求\n      const result1 = await reqACategory(pCategoryId);\n      const result2 = await reqACategory(categoryId);\n      const cName1 = result1.data.name;\n      const cName2 = result2.data.name;\n      this.setState({\n        cName1,\n        cName2,\n      }); */\n      const results = await Promise.all([\n        reqACategory(pCategoryId),\n        reqACategory(categoryId),\n      ]);\n      const cName1 = results[0].data.name;\n      const cName2 = results[1].data.name;\n      this.setState({\n        cName1,\n        cName2,\n      });\n    }\n  };\n  componentDidMount() {\n    this.getCategoryName();\n  }\n  componentWillUnmount(){\n    memoryUtils.product = {}\n  }\n  render() {\n    const { name, desc, price, detail, imgs } = storageUtils.getProduct()\n    const { cName1, cName2 } = this.state;\n    const title = (\n      <span>\n        <LinkButton onClick={() => this.props.history.goBack()}>\n          <Icon type=\"arrow-left\" style={{ marginRight: 15, fontSize: 20 }} />\n          {/* <span className=\"iconfont icon-0-55\" style={{ marginBottom: 0, fontSize: 30 }}></span> */}\n        </LinkButton>\n        <span>商品详情</span>\n      </span>\n    );\n    return (\n      <Card title={title} className=\"product-detail\">\n        <List size=\"small\">\n          <List.Item>\n            <span className=\"left\">商品名称: </span>\n            <span>{name}</span>\n          </List.Item>\n          <List.Item>\n            <span className=\"left\">商品描述: </span>\n            <span>{desc}</span>\n          </List.Item>\n          <List.Item>\n            <span className=\"left\">商品价格: </span>\n            <span>{price}</span>\n          </List.Item>\n          <List.Item>\n            <span className=\"left\">所属分类: </span>\n            <span>\n              {cName1 + (cName2 ? \"-->\" + cName2 : \"\")}\n            </span>\n          </List.Item>\n          <List.Item>\n            <span className=\"left\">商品图片: </span>\n            <span>\n              {imgs && imgs.map(img => (\n                <img\n                  key={img}\n                  className=\"product-img\"\n                  src={BASE_IMG_URL + img}\n                  alt=\"img\"\n                />\n              ))}\n            </span>\n          </List.Item>\n          <List.Item>\n            <span className=\"left\">商品详情: </span>\n            <span\n              dangerouslySetInnerHTML={{\n                __html: detail,\n              }}\n            ></span>\n          </List.Item>\n        </List>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Input, Icon, Button, Select, Card, Table, message } from \"antd\";\n\nimport LinkButton from \"../../components/link-button\";\nimport { reqProduct, reqSearchProduct, reqUpdateProduct } from \"../../api\";\nimport { PAGE_SIZE } from \"../../utils/constants\";\nimport memoryUtils from '../../utils/memoryUtils.js'\nimport storageUtils from '../../utils/storageUtils'\n\nconst Option = Select.Option;\n/* Product的默认主页面 */\nexport default class ProductHome extends Component {\n  state = {\n    loading: false,\n    total: 0, //商品的总数量\n    product: [], //商品的数组\n    searchName: \"\", //搜索的关键字\n    searchType: \"productName\", //根据哪个字段搜索\n  };\n  /* 初始化table的列的数组 */\n  initColums = () => {\n    this.columns = [\n      {\n        title: \"商品名称\",\n        dataIndex: \"name\",\n      },\n      {\n        title: \"商品描述\",\n        dataIndex: \"desc\",\n      },\n      {\n        title: \"价格\",\n        dataIndex: \"price\",\n        render: (price) => \"¥\" + price,\n      },\n      {\n        title: \"状态\",\n        width: 200,\n        // dataIndex: \"status\",\n        render: (product) => {\n          const {status, _id} = product\n          return (\n            <span>\n              <Button type=\"primary\" onClick={() => this.updateStatus(_id,status === 1 ? 2 : 1)}>{status === 1 ? '下架' : '上架'}</Button>\n              <span style={{marginLeft: 20}}>{status === 1 ? '在售' : '已下架'}</span>\n            </span>\n          );\n        },\n      },\n      {\n        title: \"操作\",\n        width: 200,\n        render: (product) => {\n          return (\n            <span>\n              <LinkButton onClick={() => this.showDetails(product)}>详情</LinkButton>\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\n            </span>\n          );\n        },\n      },\n    ];\n  };\n  //获取指定页码的列表数据显示\n  getProduct = async (pageNum) => {\n    this.pageNum = pageNum // 保存pageNum，让其他方法可以看到\n    this.setState({ loading: true });\n    const { searchName, searchType } = this.state;\n    //如果seachName有值，说明要做搜索分页\n    let result;\n    if (searchName) { // 搜索分页\n      console.log('搜索分页请求开始')\n      result = await reqSearchProduct({\n        pageNum,\n        pageSize: PAGE_SIZE,\n        searchName,\n        searchType,\n      });\n      console.log('搜索分页请求结束')\n    } else { // 一般分页\n      result = await reqProduct(pageNum, PAGE_SIZE);\n    }\n    console.log('搜索分页设置')\n    console.log('getProduct()', result)\n    this.setState({ loading: false });\n    if (result.status === 0) {\n      //取出分页数据，更新状态，显示分页列表\n      const { list, total } = result.data;\n      this.setState({\n        total,\n        product: list\n      });\n      console.log('设置成功')\n    }\n  };\n  /* 显示商品详情界面 */\n  showDetails = (product) => {\n    //缓存product，给details组件用\n    memoryUtils.product = product\n    storageUtils.saveProduct(product)\n    this.props.history.push('/product/detail')\n  }\n  /* 显示修改商品的界面 */\n  showUpdate = (product) => {\n    memoryUtils.product = product\n    this.props.history.push('/product/addupdate')\n  }\n  //更新指定商品的状态 \n  updateStatus = async (productId, status) => {\n    const result = await reqUpdateProduct(productId, status)\n    if(result.status === 0){\n      message.success('更新商品成功')\n      this.getProduct(this.pageNum)\n    }\n  }\n  componentWillMount() {\n    this.initColums();\n  }\n  componentDidMount() {\n    this.getProduct(1);\n  }\n  render() {\n    //从状态中取出数据动态显示产品名称\n    const { product, total, loading, searchName, searchType } = this.state;\n    const title = (\n      <span>\n        <Select\n          value={searchType}\n          style={{ width: 150 }}\n          onChange={(value) => this.setState({ searchType: value })} //受控组件\n        >\n          <Option value=\"productName\">按名称搜索</Option>\n          <Option value=\"productDesc\">按描述搜索</Option>\n        </Select>\n        <Input\n          placeholder=\"关键字\"\n          style={{ width: 250, margin: \"0 10px 0 10px\" }}\n          value={searchName}\n          onChange={(e) => {this.setState({ searchName: e.target.value })}}\n        />\n        <Button type=\"primary\" onClick={() => this.getProduct(1)}>\n          搜索\n        </Button>\n      </span>\n    );\n    const extra = (\n      <Button type=\"primary\" onClick={() => this.props.history.push('/product/addupdate')}>\n        <Icon type=\"plus\" />\n        添加商品\n      </Button>\n    );\n    return (\n      <Card title={title} extra={extra} style={{borderRadius: 15, border: \"none\"}}>\n        <Table\n          loading={loading}\n          rowKey=\"_id\"\n          // size=\"small\"\n          dataSource={product}\n          columns={this.columns}\n          pagination={{\n            current: this.pageNum,\n            total,\n            defaultPageSize: PAGE_SIZE,\n            showQuickJumper: true,\n            onChange: this.getProduct,\n          }}\n        />\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport ProductAddUpdate from './add-update'\nimport ProductDetail from './detail'\nimport ProductHome from './home'\nimport'./product.less'\n\n/* 商品管理路由 */\nexport default class Product extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/product' component={ProductHome} exact></Route>\n        <Route path='/product/addupdate' component={ProductAddUpdate}></Route>\n        <Route path='/product/detail' component={ProductDetail}></Route>\n        <Redirect to='/product'/>\n      </Switch>\n    )\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Form, Input, Select } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst Item = Form.Item;\nconst Option = Select.Option;\n/* 添加用户/修改用户的form组件 */\nclass UserForm extends PureComponent {\n  static propTypes = {\n    setForm: PropTypes.func.isRequired,\n    roles: PropTypes.array.isRequired,\n    user: PropTypes.object\n  };\n  componentWillMount() {\n    this.props.setForm(this.props.form);\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {roles} = this.props\n    const user = this.props.user || {}\n    const formItemLayout = {\n      labelCol: { span: 5 },\n      wrapperCol: { span: 16 },\n    };\n    return (\n      <Form {...formItemLayout}>\n        <Item label=\"用户名\">\n          {getFieldDecorator(\"username\", {\n            initialValue: user.username,\n            rules: [{ required: true, message: \"角色名称必须输入！\" }],\n          })(<Input type=\"text\" placeholder=\"请输入用户名\"></Input>)}\n        </Item>\n        {\n          user._id ? null : (<Item label=\"密码\">\n          {getFieldDecorator(\"password\", {\n            initialValue: user.password,\n            rules: [{ required: true, message: \"密码必须输入！\" }],\n          })(<Input type=\"password\" placeholder=\"请输入密码\"></Input>)}\n        </Item>)\n        }\n        <Item label=\"手机号\">\n          {getFieldDecorator(\"phone\", {\n            initialValue: user.phone,\n            rules: [{ required: true, message: \"手机号必须输入！\" }],\n          })(<Input type=\"text\" placeholder=\"请输入手机号\"></Input>)}\n        </Item>\n        <Item label=\"邮箱\">\n          {getFieldDecorator(\"email\", {\n            initialValue: user.email,\n            rules: [{ required: true, message: \"角色名称必须输入！\" }],\n          })(<Input type=\"text\" placeholder=\"请输入邮箱\"></Input>)}\n        </Item>\n        <Item label=\"角色\">\n          {getFieldDecorator(\"role_id\", {\n            initialValue: user.role_id,\n            rules: [{ required: true, message: \"角色名称必须输入！\" }],\n          })(\n          <Select placeholder='请选择角色'>\n            {\n              roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\n            }\n          </Select>\n          )}\n        </Item>\n      </Form>\n    );\n  }\n}\nexport default Form.create()(UserForm);\n","import React, { Component } from \"react\";\nimport { Card, Modal, Table, Button, message } from \"antd\";\nimport { formateDate } from \"../../utils/dateUtils\";\nimport { PAGE_SIZE } from \"../../utils/constants\";\nimport { reqDeleteUser, reqUsers, reqAddOrUpdateUser } from \"../../api\";\nimport LinkButton from \"../../components/link-button/index\";\nimport UserForm from \"./user-form\";\n\n/* 用户管理路由 */\nexport default class User extends Component {\n  state = {\n    users: [], //需要展示的用户信息\n    roles: [], //所有角色列表\n    isShow: false, //是否显示添加/更新用户列表\n  };\n  initColumns = () => {\n    this.columns = [\n      {\n        title: \"用户名\",\n        dataIndex: \"username\",\n      },\n      {\n        title: \"邮箱\",\n        dataIndex: \"email\",\n      },\n      {\n        title: \"电话\",\n        dataIndex: \"phone\",\n      },\n      {\n        title: \"注册时间\",\n        dataIndex: \"create_time\",\n        render: formateDate,\n      },\n      {\n        title: \"所属角色\",\n        dataIndex: \"role_id\",\n        // render: (role_id) => this.state.roles.find(role => role._id === role_id).name\n        render: (role_id) => this.roleNames[role_id],\n      },\n      {\n        title: \"操作\",\n        render: (user) => (\n          <span>\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\n          </span>\n        ),\n      },\n    ];\n  };\n  /* 根据roles数组，生成包含所有角色名的对象（属性名用角色id值） */\n  initRoleName = (roles) => {\n    const roleNames = roles.reduce((pre, role) => {\n      pre[role._id] = role.name;\n      return pre;\n    }, {});\n    this.roleNames = roleNames;\n  };\n  /* 获取用户 */\n  getUsers = async () => {\n    const result = await reqUsers();\n    if (result.status === 0) {\n      const { users, roles } = result.data;\n      this.initRoleName(roles);\n      this.setState({ users, roles });\n    } else {\n      message.error(\"请求获取用户列表失败!\");\n    }\n  };\n  /* 删除指定用户 */\n  deleteUser = (user) => {\n    Modal.confirm({\n      title: `确认删除${user.username}吗？`,\n      okType: 'danger',\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const result = await reqDeleteUser(user._id);\n        if (result.status === 0) {\n          message.success(\"删除用户成功！\");\n          this.getUsers();\n        } else {\n          message.error(\"删除用户失败！\");\n        }\n      },\n    });\n  };\n  /* 显示创建用户界面 */\n  showAdd = () => {\n    this.user = null //删除修改用户时用到的this.user，否则直接点击“创建用户”按钮后会显示修改用户时候的用户信息\n    this.setState({isShow: true})\n  }\n  /* 显示修改界面 */\n  showUpdate = (user) => {\n    this.user = user; //保存用户\n    this.setState({ isShow: true });\n  };\n  /* 添加/更新用户 */\n  addOrUpdateUser = async () => {\n    //收集输入数据\n    const user = this.form.getFieldsValue();\n    this.form.resetFields();\n    if(this.user){\n      user._id = this.user._id\n    }\n    //提交添加用户的请求\n    const result = await reqAddOrUpdateUser(user);\n    if (result.status === 0) {\n      message.success(`请求${this.user ? '修改' : '添加'}用户成功！`);\n      this.setState({ isShow: false });\n      this.getUsers();\n    } else {\n      message.error(\"请求添加用户失败！\");\n    }\n    //更新状态\n  };\n  componentWillMount() {\n    this.initColumns();\n  }\n  componentDidMount() {\n    this.getUsers();\n  }\n  render() {\n    const { users, roles, isShow } = this.state;\n    const user = this.user || {};\n    const title = (\n      <Button type=\"primary\" onClick={this.showAdd}>\n        创建用户\n      </Button>\n    );\n\n    return (\n      <Card title={title}>\n        <Table\n          rowKey=\"_id\"\n          // size=\"small\"\n          dataSource={users}\n          columns={this.columns}\n          pagination={{ defaultPageSize: PAGE_SIZE }}\n        />\n        <Modal\n          title={user._id ? \"修改用户\" : \"创建用户\"}\n          okText=\"确认\"\n          cancelText=\"取消\"\n          visible={isShow}\n          onOk={this.addOrUpdateUser}\n          onCancel={() => {\n            this.setState({ isShow: false })\n            //重置输入内容\n            this.form.resetFields()\n          }}\n        >\n          <UserForm setForm={(form) => (this.form = form)} roles={roles} user={user}/>\n        </Modal>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Input } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst Item = Form.Item;\n/* 添加分类的form组件 */\nclass AddForm extends Component {\n  static propTypes = {\n    setForm: PropTypes.func.isRequired,\n  };\n  componentWillMount() {\n    this.props.setForm(this.props.form);\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 5 },\n      wrapperCol: { span: 18 },\n    };\n    return (\n      <Form>\n        <Item label=\"角色名称\" {...formItemLayout}>\n          {getFieldDecorator(\"roleName\", {\n            initialValue: \"\",\n            rules: [{ required: true, message: \"角色名称必须输入！\" }],\n          })(<Input type=\"text\" placeholder=\"请输入角色名称\"></Input>)}\n        </Item>\n      </Form>\n    );\n  }\n}\nconst AddForm2 = Form.create()(AddForm);\nexport default AddForm2;\n","import React, { PureComponent } from \"react\";\nimport { Form, Input, Tree } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport menuList from \"../../config/menuConfig\";\n\nconst Item = Form.Item;\nconst { TreeNode } = Tree;\n\n/* 添加分类的form组件 */\nexport default class AuthForm extends PureComponent {\n  static propTypes = {\n    role: PropTypes.object,\n  };\n  /* 根据传入角色的menu生成初始状态 */\n  constructor(props) {\n    super(props);\n    const { menus } = this.props.role;\n    this.state = {\n      checkedKeys: menus,\n    };\n  }\n  /* 选中某个node时的回调 */\n  onCheck = (checkedKeys) => {\n    console.log(\"onCheck\", checkedKeys);\n    this.setState({ checkedKeys });\n  };\n  getTreeNodes = (menuList) => {\n    return menuList.reduce((pre, item) => {\n      pre.push(\n        <TreeNode title={item.title} key={item.key}>\n          {item.children ? this.getTreeNodes(item.children) : null}\n        </TreeNode>\n      );\n      return pre;\n    }, []);\n  };\n  /* 为父组件提供获取最新menus数据的方法 */\n  getMenus = () => this.state.checkedKeys;\n  componentWillMount() {\n    this.treeNodes = this.getTreeNodes(menuList);\n  }\n  /* 根据新传入的role来更新checkedKeys状态\n  当组件接收到新的属性时自动调用 */\n  componentWillReceiveProps(nextProps) {\n    console.log(\"componentWillReceiveProps()\", nextProps);\n    const menus = nextProps.role.menus;\n    this.setState({\n      checkedKeys: menus,\n    });\n    // this.state.checkedKeys = menus\n  }\n  render() {\n    console.log(\"AuthForm render()\");\n    const { role } = this.props;\n    const { checkedKeys } = this.state;\n    // const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 5 },\n      wrapperCol: { span: 16 },\n    };\n    return (\n      <Form>\n        <Item label=\"角色名称\" {...formItemLayout}>\n          <Input value={role.name} disabled />\n        </Item>\n        <Tree\n          onCheck={this.onCheck}\n          checkable\n          defaultExpandAll={true}\n          checkedKeys={checkedKeys}\n        >\n          <TreeNode title=\"平台权限\" key=\"all\">\n            {this.treeNodes}\n          </TreeNode>\n        </Tree>\n      </Form>\n    );\n  }\n}\n","import React, { Component } from \"react\"\nimport { Card, Table, Button, message, Modal } from \"antd\"\nimport { connect } from \"react-redux\"\n\nimport { PAGE_SIZE } from \"../../utils/constants.js\"\nimport { reqAddRole, reqRoles, reqUpdateRole } from \"../../api\"\nimport AddForm2 from \"./add-form\"\nimport AuthForm from \"./auth-form.jsx\"\n// import memoryUtils from '../../utils/memoryUtils'\n// import storageUtils from '../../utils/storageUtils.js'\nimport { formateDate } from \"../../utils/dateUtils.js\"\nimport { logout } from \"../../redux/actions\"\nimport './role.less'\n\n/* 角色管理路由 */\nclass Role extends Component {\n  state = {\n    roles: [], //所有角色的列表\n    role: {}, //选中的role\n    isShowAdd: false, //是否显示添加界面\n    isShowAuth: false, //是否显示设置权限界面\n  }\n  constructor(props) {\n    super(props)\n    this.auth = React.createRef()\n  }\n  initColums = () => {\n    this.columns = [\n      {\n        title: \"角色名称\",\n        dataIndex: \"name\",\n      },\n      {\n        title: \"创建时间\",\n        dataIndex: \"create_time\",\n        render: formateDate,\n      },\n      {\n        title: \"授权时间\",\n        dataIndex: \"auth_time\",\n        render: formateDate,\n      },\n      {\n        title: \"授权人\",\n        dataIndex: \"auth_name\",\n      },\n    ]\n  }\n  getRoles = async () => {\n    const result = await reqRoles()\n    if (result.status === 0) {\n      const roles = result.data\n      this.setState({ roles })\n    } else {\n      message.error(\"获取角色失败！\")\n    }\n  }\n  onRow = (role) => {\n    return {\n      onClick: e => {\n        //点击行\n        console.log(\"row onClick()\", role)\n        this.setState({ role })\n      },\n    }\n  }\n  /* 添加角色 */\n  addRole = () => {\n    //进行表单验证，只有通过了才可以发起请求\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        //1. 收集输入数据\n        const { roleName } = values\n        //重置输入的数据\n        this.form.resetFields()\n        //2. 请求添加\n        const result = await reqAddRole(roleName)\n        //3. 根据结果显示\n        if (result.status === 0) {\n          message.success(\"添加角色成功\")\n          // this.getRoles()\n          //更新roles的状态\n          const role = result.data\n          // console.log(roles)\n          //更新roles状态：基于原本状态数据更新，适合用函数的方式。\n          this.setState((state) => ({\n            roles: [...state.roles, role],\n            isShowAdd: false,\n          }))\n        } else {\n          message.error(\"添加角色失败！\")\n        }\n        //更新列表显示\n      } else {\n        message.error(\"数据校验失败！\" + err.message)\n      }\n    })\n  }\n  /* 更新角色 */\n  updateRole = async () => {\n    this.setState({\n      isShowAuth: false,\n    })\n    const role = this.state.role\n    const menus = this.auth.current.getMenus()\n    role.menus = menus\n    // role.auth_name = memoryUtils.user.username\n    role.auth_name = this.props.user.username\n    role.auth_time = formateDate(Date.now())\n    const result = await reqUpdateRole(role)\n    if (result.status === 0) {\n      //如果当前用户更新的是自己的权限，强制退出\n      // if(role._id === memoryUtils.user.role_id){\n      if (role._id === this.props.user.role_id) {\n        // memoryUtils.user={}\n        // storageUtils.deleteUser()\n        // this.props.history.replace('/login')\n        this.props.logout()\n        message.success(\"当前用户角色权限修改了，重新登录！\")\n      } else {\n        message.success(\"设置角色权限成功！\")\n        this.setState({\n          roles: [...this.state.roles],\n        })\n      }\n    } else {\n      message.err(\"设置角色权限失败！\")\n    }\n  }\n  componentWillMount() {\n    this.initColums()\n    this.getRoles()\n  }\n  render() {\n    const { roles, role, isShowAdd, isShowAuth } = this.state\n    const title = (\n      <span>\n        <Button\n          type=\"primary\"\n          onClick={() => this.setState({ isShowAdd: true })}\n        >\n          创建角色\n        </Button>\n        &nbsp; &nbsp;\n        <Button\n          type=\"primary\"\n          disabled={!role._id}\n          onClick={() => this.setState({ isShowAuth: true })}\n        >\n          设置角色权限\n        </Button>\n      </span>\n    )\n    return (\n      <Card title={title} style={{border: \"none\", borderRadius: 15}}>\n        <Table\n          // rowSelection={{ type: \"radio\", selectedRowKeys: [role._id] }}\n          rowSelection={{\n            type: \"radio\",\n            selectedRowKeys: [role._id],\n            onSelect: (role) => {\n              this.setState({ role })\n            },\n          }}\n          onRow={this.onRow}\n          rowKey=\"_id\"\n          // size=\"small\"\n          dataSource={roles}\n          columns={this.columns}\n          pagination={{ defaultPageSize: PAGE_SIZE }}\n        />\n        <Modal\n          title=\"添加角色\"\n          okText=\"确认\"\n          cancelText=\"取消\"\n          visible={isShowAdd}\n          onOk={this.addRole}\n          onCancel={() => {\n            this.setState({ isShowAdd: false })\n          }}\n        >\n          <AddForm2 setForm={(form) => (this.form = form)} />\n        </Modal>\n        <Modal\n          title=\"设置角色权限\"\n          okText=\"确认\"\n          cancelText=\"取消\"\n          visible={isShowAuth}\n          onOk={this.updateRole}\n          onCancel={() => {\n            this.setState({ isShowAuth: false })\n          }}\n        >\n          <AuthForm ref={this.auth} role={role} />\n        </Modal>\n      </Card>\n    )\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { logout })(Role)\n","import React, { Component } from \"react\";\nimport { Card, Button } from \"antd\";\nimport ReactEcharts from \"echarts-for-react\";\n/*\n后台管理的柱状图路由组件\n*/\nexport default class Bar extends Component {\n  state = {\n    sales: [23, 24, 18, 25, 27], //销量\n    stores: [12, 54, 18, 45, 9] //数组\n  }\n  update = () => {\n    this.setState(state => ({\n      sales: state.sales.map(sale => sale + 1),\n      stores: state.stores.reduce((pre, store) => {\n        pre.push(store - 1)\n        return pre\n      }, [])\n    }))\n  }\n  //返回柱状图的配置对象\n  getOption = (sales, stores) => {\n    return {\n      title: {\n        text: 'ECharts入门示例'\n      },\n      tooltip: {},\n      legend: {\n        data: ['销量', '库存']\n      },\n      xAxis: {\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri']\n      },\n      yAxis: {},\n      series: [\n        {\n          name: '销量',\n          type: 'bar',\n          data: sales\n        },\n        {\n          name: '库存',\n          type: 'bar',\n          data: stores\n        }\n      ]\n    }\n  }\n  render() {\n    const {sales, stores} = this.state\n    return (\n      <div>\n        {\" \"}\n        <Card>\n          <Button type=\"primary\" onClick={this.update}>\n            更新\n          </Button>{\" \"}\n        </Card>\n        <Card title=\"柱状图一\">\n          <ReactEcharts option={this.getOption(sales, stores)} style = {{width: 1150}}/>\n        </Card>{\" \"}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Button } from \"antd\";\nimport ReactEcharts from \"echarts-for-react\";\n/*\n后台管理的柱状图路由组件\n*/\nexport default class Bar extends Component {\n  state = {\n    sales: [23, 24, 18, 25, 27], //销量\n    stores: [12, 54, 18, 45, 9], //数组\n  };\n  update = () => {\n    this.setState((state) => ({\n      sales: state.sales.map((sale) => sale + 1),\n      stores: state.stores.reduce((pre, store) => {\n        pre.push(store - 1);\n        return pre;\n      }, []),\n    }));\n  };\n  //返回柱状图的配置对象\n  getOption = (sales, stores) => {\n    return {\n      backgroundColor: \"#2c343c\",\n      title: {\n        text: \"Customized Pie\",\n        left: \"center\",\n        top: 20,\n        textStyle: {\n          color: \"#ccc\",\n        },\n      },\n      tooltip: {\n        trigger: \"item\",\n      },\n      visualMap: {\n        show: false,\n        min: 80,\n        max: 600,\n        inRange: {\n          colorLightness: [0, 1],\n        },\n      },\n      series: [\n        {\n          name: \"Access From\",\n          type: \"pie\",\n          radius: \"55%\",\n          center: [\"50%\", \"50%\"],\n          data: [\n            { value: 335, name: \"Direct\" },\n            { value: 310, name: \"Email\" },\n            { value: 274, name: \"Union Ads\" },\n            { value: 235, name: \"Video Ads\" },\n            { value: 400, name: \"Search Engine\" },\n          ].sort(function (a, b) {\n            return a.value - b.value;\n          }),\n          roseType: \"radius\",\n          label: {\n            color: \"rgba(255, 255, 255, 0.3)\",\n          },\n          labelLine: {\n            lineStyle: {\n              color: \"rgba(255, 255, 255, 0.3)\",\n            },\n            smooth: 0.2,\n            length: 10,\n            length2: 20,\n          },\n          itemStyle: {\n            color: \"#c23531\",\n            shadowBlur: 200,\n            shadowColor: \"rgba(0, 0, 0, 0.5)\",\n          },\n          animationType: \"scale\",\n          animationEasing: \"elasticOut\",\n          animationDelay: function (idx) {\n            return Math.random() * 200;\n          },\n        },\n      ],\n    };\n  };\n  getOption2 = () => {\n    return {\n      title: {\n        text: 'Referer of a Website',\n        subtext: 'Fake Data',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [\n        {\n          name: 'Access From',\n          type: 'pie',\n          radius: '50%',\n          data: [\n            { value: 1048, name: 'Search Engine' },\n            { value: 735, name: 'Direct' },\n            { value: 580, name: 'Email' },\n            { value: 484, name: 'Union Ads' },\n            { value: 300, name: 'Video Ads' }\n          ],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }\n      ]\n    }\n  };\n  render() {\n    const { sales, stores } = this.state;\n    return (\n      <div>\n        {\" \"}\n        <Card>\n          <Button type=\"primary\" onClick={this.update}>\n            更新\n          </Button>{\" \"}\n        </Card>\n        <Card title=\"饼图一\">\n          <ReactEcharts option={this.getOption2()} style={{ width: 1150 }} />\n        </Card>{\" \"}\n        <Card title=\"饼图二\">\n          <ReactEcharts\n            option={this.getOption(sales, stores)}\n            style={{ width: 1150 }}\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Button } from \"antd\";\nimport ReactEcharts from \"echarts-for-react\";\n/*\n后台管理的折线图路由组件\n*/\nexport default class Bar extends Component {\n  state = {\n    sales: [23, 24, 18, 25, 27], //销量\n    stores: [12, 54, 18, 45, 9] //数组\n  }\n  update = () => {\n    this.setState(state => ({\n      sales: state.sales.map(sale => sale + 1),\n      stores: state.stores.reduce((pre, store) => {\n        pre.push(store - 1)\n        return pre\n      }, [])\n    }))\n  }\n  //返回柱状图的配置对象\n  getOption = (sales, stores) => {\n    return {\n      title: {\n        text: 'ECharts入门示例'\n      },\n      tooltip: {},\n      legend: {\n        data: ['销量', '库存']\n      },\n      xAxis: {\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri']\n      },\n      yAxis: {},\n      series: [\n        {\n          name: '销量',\n          type: 'line',\n          data: sales\n        },\n        {\n          name: '库存',\n          type: 'line',\n          data: stores\n        }\n      ]\n    }\n  }\n  render() {\n    const {sales, stores} = this.state\n    return (\n      <div>\n        {\" \"}\n        <Card>\n          <Button type=\"primary\" onClick={this.update}>\n            更新\n          </Button>{\" \"}\n        </Card>\n        <Card title=\"折线图一\">\n          <ReactEcharts option={this.getOption(sales, stores)} style = {{width: 1150}}/>\n        </Card>{\" \"}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport { setHeadTitle } from \"../../redux/actions\";\nimport \"./not-found.less\";\n\nclass NotFound extends Component {\n  goHome = () => {\n    this.props.setHeadTitle(\"首页\");\n    this.props.history.replace(\"/home\");\n  };\n  render() {\n    return (\n      <Row className=\"not-found\">\n        <Col span={12} className=\"left\"></Col>{\" \"}\n        <Col span={12} className=\"right\">\n          <h1>404</h1> <h2>抱歉，你访问的页面不存在</h2>{\" \"}\n          <div>\n            <Button type=\"primary\" onClick={this.goHome}>\n              {\" \"}\n              回到首页\n            </Button>{\" \"}\n          </div>\n        </Col>{\" \"}\n      </Row>\n    );\n  }\n}\n\nexport default connect(null, { setHeadTitle })(NotFound);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport { connect } from \"react-redux\";\n\n// import memoryUtils from \"../../utils/memoryUtils.js\";\nimport LeftNav from \"../../components/left-nav/LeftNav\";\nimport Header from \"../../components/header/\";\nimport Home from \"../home/home\";\nimport Category from \"../category/category\";\nimport Product from \"../product/product\";\nimport User from \"../user/user\";\nimport Role from \"../role/role\";\nimport Bar from \"../charts/bar\";\nimport Pie from \"../charts/pie\";\nimport Line from \"../charts/line\";\nimport NotFound from \"../not-found/not-found\";\n\nconst { Footer, Sider, Content } = Layout;\nclass Admin extends Component {\n  render() {\n    // const user = memoryUtils.user;\n    const user = this.props.user;\n    //如果内存中没有存储user， 说明当前没有登录\n    if (!user || !user._id) {\n      //自动跳转到login.jsx\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      // <div style={{height: 1080}}>\n        <Layout style={{ minHeight: \"100%\" }}>\n          {/* 左侧导航栏 */}\n        <Sider style={{backgroundColor: \"white\"}}>\n          <LeftNav />\n        </Sider>\n        <Layout>\n          <Header /> {/* 右侧头部部分 */}\n          <Content style={{ backgroundColor: \"#fff\", margin: 20, borderRadius: 15}}>  {/* 右侧主体部分 */}\n            <Switch>\n              <Redirect exact from='/' to=\"/home\" />\n              <Route path=\"/home\" component={Home}></Route>\n              <Route path=\"/category\" component={Category}></Route>\n              <Route path=\"/product\" component={Product}></Route>\n              <Route path=\"/user\" component={User}></Route>\n              <Route path=\"/role\" component={Role}></Route>\n              <Route path=\"/bar\" component={Bar}></Route>\n              <Route path=\"/pie\" component={Pie}></Route>\n              <Route path=\"/line\" component={Line}></Route>\n              <Route component={NotFound} />\n            </Switch>\n          </Content>\n          {/* 右侧底部文字 */}\n          <Footer style={{ textAlign: \"center\", color: \"#ccc\" }}>\n            推荐使用谷歌浏览器, 可以获得更加页面操作体验\n          </Footer>\n        </Layout>\n        </Layout>\n      // </div>\n    );\n  }\n}\nexport default connect((state) => ({ user: state.user }), {})(Admin);\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n// import { BrowserRouter } from \"react-router-dom\";\n\nimport Login from \"./pages/login/login\";\nimport Admin from \"./pages/admin/admin\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>{/* 只匹配其中一个 */}\n          <Route path=\"/login\" component={Login}></Route>\n          <Route path=\"/\" component={Admin}></Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n","/* 用来根据老的state和指定的action生成并返回新的state的函数 */\nimport storageUtils from '../utils/storageUtils'\nimport {combineReducers} from 'redux'\n\nimport {SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER} from './action-types'\n\n/* 用来管理头部标题的reducer函数 */\nconst initHeadTitle = '首页'\nfunction headTitle(preState = initHeadTitle, action){\n    const {type, data} = action\n    switch (type) {\n        case SET_HEAD_TITLE:\n            return data\n        default: \n        return preState\n    }\n}\n/* 用来管理当前登录用户的reducer函数 */\nconst initUser = storageUtils.getUser() || {}\nfunction user(preState=initUser, action){\n    const {type, user, errorMsg} = action\n    switch (type) {\n        case RECEIVE_USER:\n            return user\n        case SHOW_ERROR_MSG:\n            return {...preState, errorMsg}\n        case RESET_USER:\n            return {}\n        default:\n            return preState\n    }\n}\n/* 默认向外暴露的是合并产生的reducer函数\n管理的总的state的结构：\n{\n    headTitle: '首页',\n    user: {}\n} */\nexport default combineReducers({\n    headTitle, user\n})\n","/* redux最核心的管理对象store */\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducer from './reducer'\n\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\n// import memoryUtils from \"./utils/memoryUtils\";\n// import storageUtils from \"./utils/storageUtils\";\nimport store from \"./redux/store\";\n\n//读取local中保存的user\n/* const user = storageUtils.getUser();\nmemoryUtils.user = user; */\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}