{"ast":null,"code":"var _jsxFileName = \"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/pages/product/rich-text-editor.jsx\";\nimport React, { Component } from \"react\";\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport PropTypes from \"prop-types\";\n\n/* 富文本编辑器---用来指定商品详情组件 */\nexport default class RichTextEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty() //创建一个没有内容的编辑对象\n    };\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n    this.uploadImageCallBack = file => {\n      return new Promise((resolve, reject) => {\n        //发起上传图片的ajax请求\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"/manage/img/upload\");\n        const data = new FormData();\n        data.append(\"image\", file);\n        xhr.send(data);\n        xhr.addEventListener(\"load\", () => {\n          const response = JSON.parse(xhr.responseText);\n          const url = response.data.url; //得到图片的url\n          // resolve(url);\n          resolve({\n            data: {\n              link: url\n            }\n          });\n        });\n        xhr.addEventListener(\"error\", () => {\n          const error = JSON.parse(xhr.responseText);\n          reject(error);\n        });\n      });\n    };\n    this.getDetail = () => {\n      //返回输入数据对应的html格式的文本\n      return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\n    };\n    const html = this.props.detail;\n    // const contentBlock = htmlToDraft(html);\n    if (html) {\n      //如果有值，根据html格式字符串创建一个对应的编辑对象\n      const contentBlock = htmlToDraft(html);\n      if (contentBlock) {\n        const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n        const editorState = EditorState.createWithContent(contentState);\n        this.state = {\n          editorState\n        };\n      }\n    } else {\n      this.state = {\n        editorState: EditorState.createEmpty()\n      };\n    }\n  }\n  render() {\n    const {\n      editorState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Editor, {\n      editorState: editorState,\n      editorStyle: {\n        border: \"none\",\n        backgroundColor: \"rgb(247, 248, 252)\",\n        height: 200,\n        paddingLeft: 10\n      },\n      onEditorStateChange: this.onEditorStateChange,\n      toolbar: {\n        image: {\n          uploadCallback: this.uploadImageCallBack,\n          alt: {\n            present: true,\n            mandatory: true\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  }\n}\nRichTextEditor.propTypes = {\n  detail: PropTypes.string\n};","map":{"version":3,"names":["React","Component","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","PropTypes","RichTextEditor","constructor","props","state","editorState","createEmpty","onEditorStateChange","setState","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","url","link","error","getDetail","getCurrentContent","html","detail","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","render","border","backgroundColor","height","paddingLeft","image","uploadCallback","alt","present","mandatory","propTypes","string"],"sources":["/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/pages/product/rich-text-editor.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport PropTypes from \"prop-types\";\n\n/* 富文本编辑器---用来指定商品详情组件 */\nexport default class RichTextEditor extends Component {\n  static propTypes = {\n    detail: PropTypes.string,\n  };\n  state = {\n    editorState: EditorState.createEmpty(), //创建一个没有内容的编辑对象\n  };\n  constructor(props) {\n    super(props);\n    const html = this.props.detail;\n    // const contentBlock = htmlToDraft(html);\n    if (html) {\n      //如果有值，根据html格式字符串创建一个对应的编辑对象\n      const contentBlock = htmlToDraft(html);\n      if (contentBlock) {\n        const contentState = ContentState.createFromBlockArray(\n          contentBlock.contentBlocks\n        );\n        const editorState = EditorState.createWithContent(contentState);\n        this.state = {\n          editorState,\n        };\n      }\n    } else {\n      this.state = {\n        editorState: EditorState.createEmpty(),\n      };\n    }\n  }\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n  uploadImageCallBack = (file) => {\n    return new Promise((resolve, reject) => {\n        //发起上传图片的ajax请求\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", \"/manage/img/upload\");\n      const data = new FormData();\n      data.append(\"image\", file);\n      xhr.send(data);\n      xhr.addEventListener(\"load\", () => {\n        const response = JSON.parse(xhr.responseText);\n        const url = response.data.url //得到图片的url\n        // resolve(url);\n        resolve({data: {link: url}})\n      });\n      xhr.addEventListener(\"error\", () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    });\n  };\n  getDetail = () => {\n    //返回输入数据对应的html格式的文本\n    return draftToHtml(\n      convertToRaw(this.state.editorState.getCurrentContent())\n    );\n  };\n  render() {\n    const { editorState } = this.state;\n    return (\n      <Editor\n        editorState={editorState}\n        editorStyle={{\n          border: \"none\",\n          backgroundColor: \"rgb(247, 248, 252)\",\n          height: 200,\n          paddingLeft: 10,\n        }}\n        onEditorStateChange={this.onEditorStateChange}\n        toolbar={{\n          image: {\n            uploadCallback: this.uploadImageCallBack,\n            alt: { present: true, mandatory: true },\n          },\n        }}\n      />\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}