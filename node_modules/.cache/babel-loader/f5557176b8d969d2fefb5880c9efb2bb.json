{"ast":null,"code":"import\"antd/es/icon/style\";import _Icon from\"antd/es/icon\";import _classCallCheck from\"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import\"antd/es/menu/style\";import _Menu from\"antd/es/menu\";import React,{Component}from\"react\";import{Link,withRouter}from\"react-router-dom\";import{connect}from\"react-redux\";import\"./LeftNav.less\";import logo from\"../../assets/images/logo.jpeg\";import menuList from\"../../config/menuConfig.js\";// import memoryUtils from \"../../utils/memoryUtils\";\nimport{setHeadTitle}from\"../../redux/actions\";var SubMenu=_Menu.SubMenu;var LeftNav=/*#__PURE__*/function(_Component){_inherits(LeftNav,_Component);var _super=_createSuper(LeftNav);function LeftNav(){var _this;_classCallCheck(this,LeftNav);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.hasAuth=function(item){var key=item.key,isPublic=item.isPublic;// const menus = memoryUtils.user.role.menus;\nvar menus=_this.props.user.role.menus;// const username = memoryUtils.user.username;\nvar username=_this.props.user.username;//1. 如果当前用户是admin\n//3. 如果当前item是公开的\n//2. 当前用户有此item的权限：key有没有在menus中\nif(username===\"admin\"||isPublic||menus.indexOf(key)!==-1){return true;}else if(item.children){//如果当前用户有此item的某个子item的权限\nreturn!!item.children.find(function(child){return menus.indexOf(child.key)!==-1;});}return false;};_this.getMenuNodes=function(menuList){//得到当前请求的路径\nvar path=_this.props.location.pathname;return menuList.reduce(function(pre,item){//如果当前用户有item对应的权限，才需要显示对应的菜单项\nif(_this.hasAuth(item)){if(!item.children){// 如果只有一级路由\nif(item.key===path||path.indexOf(item.key)===0){//更新redux中headTitle的状态\n_this.props.setHeadTitle(item.title);}pre.push(/*#__PURE__*/React.createElement(_Menu.Item,{key:item.key,onClick:function onClick(){return _this.props.setHeadTitle(item.title);}},/*#__PURE__*/React.createElement(Link,{to:item.key},/*#__PURE__*/React.createElement(_Icon,{type:item.icon}),/*#__PURE__*/React.createElement(\"span\",null,item.title))));}else{// 如果有不止一级路由\n//查找一个与当前请求路径相匹配的子item\nvar cItem=item.children.find(function(cItem){return path.indexOf(cItem.key)===0;});if(cItem){//如果存在，说明当前item的子列表需要打开\n_this.openKey=item.key;}pre.push(/*#__PURE__*/React.createElement(SubMenu,{key:item.key,title:/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(_Icon,{type:item.icon}),/*#__PURE__*/React.createElement(\"span\",null,item.title))},_this.getMenuNodes(item.children)));}}return pre;},[]);};return _this;}_createClass(LeftNav,[{key:\"componentWillMount\",value:// 在第一次render()之前执行一次\n// 为第一个render准备数据（同步）\nfunction componentWillMount(){this.menuNodes=this.getMenuNodes(menuList);}},{key:\"render\",value:function render(){//得到当前请求的路径，使得默认选中菜单项的某一个\nvar path=this.props.location.pathname;if(path.indexOf(\"/product\")===0){//说明当前请求的是商品或商品的子路由\npath=\"/product\";}//得到需要打开菜单项的key\nvar openKey=this.openKey;return/*#__PURE__*/React.createElement(\"div\",{to:\"/\",className:\"left-nav\"},/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"left-nav-header\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"logo\"}),/*#__PURE__*/React.createElement(\"h1\",null,\"XXX\\u540E\\u53F0\")),/*#__PURE__*/React.createElement(_Menu,{selectedKeys:[path]/* 动态显示选中的菜单项，defaultSelectedKeys不能做到，它只能匹配第一次请求的路径，后面不会再改变 */,defaultOpenKeys:[openKey],mode:\"inline\",theme:\"light\"},this.menuNodes));}}]);return LeftNav;}(Component);export default connect(function(state){return{user:state.user};},{setHeadTitle:setHeadTitle})(withRouter(LeftNav));","map":{"version":3,"names":["React","Component","Link","withRouter","connect","logo","menuList","setHeadTitle","SubMenu","LeftNav","hasAuth","item","key","isPublic","menus","props","user","role","username","indexOf","children","find","child","getMenuNodes","path","location","pathname","reduce","pre","title","push","icon","cItem","openKey","menuNodes","state"],"sources":["/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/components/left-nav/LeftNav.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu, Icon } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport \"./LeftNav.less\";\nimport logo from \"../../assets/images/logo.jpeg\";\nimport menuList from \"../../config/menuConfig.js\";\n// import memoryUtils from \"../../utils/memoryUtils\";\nimport { setHeadTitle } from \"../../redux/actions\";\n\nconst { SubMenu } = Menu;\n\nclass LeftNav extends Component {\n  /* 判断当前登录用户对item是否有访问权限 */\n  hasAuth = (item) => {\n    const { key, isPublic } = item;\n    // const menus = memoryUtils.user.role.menus;\n    const menus = this.props.user.role.menus;\n    // const username = memoryUtils.user.username;\n    const username = this.props.user.username;\n    \n    //1. 如果当前用户是admin\n    //3. 如果当前item是公开的\n    //2. 当前用户有此item的权限：key有没有在menus中\n    if (username === \"admin\" || isPublic || menus.indexOf(key) !== -1) {\n      return true;\n    } else if (item.children) {\n      //如果当前用户有此item的某个子item的权限\n      return !!item.children.find((child) => menus.indexOf(child.key) !== -1);\n    }\n    return false;\n  };\n  /* 根据menu的数据数组生成对应的标签数组 */\n  getMenuNodes = (menuList) => {\n    //得到当前请求的路径\n    const path = this.props.location.pathname;\n    return menuList.reduce((pre, item) => {\n      //如果当前用户有item对应的权限，才需要显示对应的菜单项\n      if (this.hasAuth(item)) {\n        if (!item.children) { // 如果只有一级路由\n          if (item.key === path || path.indexOf(item.key) === 0) {\n            //更新redux中headTitle的状态\n            this.props.setHeadTitle(item.title);\n          }\n          pre.push((\n            <Menu.Item\n              key={item.key}\n              onClick={() => this.props.setHeadTitle(item.title)}\n            >\n              <Link to={item.key}>\n                <Icon type={item.icon} />\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          ));\n        } else { // 如果有不止一级路由\n          //查找一个与当前请求路径相匹配的子item\n          const cItem = item.children.find(\n            (cItem) => path.indexOf(cItem.key) === 0\n          );\n          if (cItem) {\n            //如果存在，说明当前item的子列表需要打开\n            this.openKey = item.key;\n          }\n          \n          pre.push((\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n                  <Icon type={item.icon} />\n                  <span>{item.title}</span>\n                </span>\n              }\n            >\n              {this.getMenuNodes(item.children)}\n            </SubMenu>\n          ));\n        }\n      }\n      return pre;\n    }, []);\n  };\n  // 在第一次render()之前执行一次\n  // 为第一个render准备数据（同步）\n  componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n  render() {\n    //得到当前请求的路径，使得默认选中菜单项的某一个\n    let path = this.props.location.pathname;\n    if (path.indexOf(\"/product\") === 0) {   //说明当前请求的是商品或商品的子路由\n      path = \"/product\";\n    }\n\n    //得到需要打开菜单项的key\n    const openKey = this.openKey;\n    return (\n      <div to=\"/\" className=\"left-nav\">\n        <Link to=\"/\" className=\"left-nav-header\">\n          <img src={logo} alt=\"logo\" />\n          <h1>XXX后台</h1>\n        </Link>\n        <Menu\n          selectedKeys={[path]} /* 动态显示选中的菜单项，defaultSelectedKeys不能做到，它只能匹配第一次请求的路径，后面不会再改变 */\n          defaultOpenKeys={[openKey]}\n          mode=\"inline\"\n          theme=\"light\"\n        >\n          {this.menuNodes}\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default connect((state) => ({ user: state.user }), { setHeadTitle })(\n  withRouter(LeftNav)\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}