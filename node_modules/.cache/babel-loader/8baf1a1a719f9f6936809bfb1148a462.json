{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport ajax from \"./ajax\";\nimport jsonp from 'jsonp';\nconst BASE = '/api';\n//用户登录\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {\n  username,\n  password\n}, 'POST');\n\n//获取一级/二级分类的列表\nexport const reqGetCategorys = parentId => ajax(BASE + '/manage/category/list', {\n  parentId\n});\n//添加分类\nexport const reqAddCategory = (parentId, categoryName) => ajax(BASE + '/manage/category/add', {\n  parentId,\n  categoryName\n}, 'POST');\n//更新分类\nexport const reqUpdateCategory = (categoryId, categoryName) => ajax(BASE + '/manage/category/update', {\n  categoryId,\n  categoryName\n}, 'POST');\n\n//获取商品分页列表\n/*  */\nexport const reqProduct = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {\n  pageNum,\n  pageSize\n});\n\n//搜索商品分页列表(根据商品名称/描述)\nexport const reqSearchProduct = _ref => {\n  let {\n    pageNum,\n    pageSize,\n    searchName,\n    searchType\n  } = _ref;\n  return ajax(BASE + '/manage/product/search', {\n    pageNum,\n    pageSize,\n    [searchType]: searchName\n  });\n};\n\n//获取一个分类\nexport const reqACategory = categoryId => ajax(BASE + '/manage/category/info', {\n  categoryId\n});\n\n//更新商品的状态(上架/下架)\nexport const reqUpdateProduct = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {\n  productId,\n  status\n}, 'POST');\n\n//删除图片\nexport const reqDeleteImg = name => ajax(BASE + '/manage/img/delete', {\n  name\n}, 'POST');\n\n//添加/更新商品\nexport const reqAddOrUpdateProduct = product => ajax(BASE + '/manage/product/' + (product._id ? 'update' : 'add'), product, 'POST');\n\n// //更新商品\n// export const reqUpdateAProduct = (product) => ajax('/manage/product/update', product, 'POST')\n\n//获取所有角色列表\nexport const reqRoles = () => ajax(BASE + '/manage/role/list');\n\n//添加角色\nexport const reqAddRole = roleName => ajax(BASE + '/manage/role/add', {\n  roleName\n}, 'POST');\n\n//更新角色\nexport const reqUpdateRole = role => ajax(BASE + '/manage/role/update', role, 'POST');\n\n//获取用户列表\nexport const reqUsers = () => ajax(BASE + '/manage/user/list');\n\n//删除用户\nexport const reqDeleteUser = userId => ajax(BASE + '/manage/user/delete', {\n  userId\n}, 'POST');\n\n// 添加/更新用户\nexport const reqAddOrUpdateUser = user => ajax(BASE + '/manage/user/' + (user._id ? 'update' : 'add'), user, \"POST\");\n\n// 获取天气\nexport const reqWeather = city => {\n  return new Promise((resolve, reject) => {\n    // const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p4 9MVra6urFRGOT9s8UBWr2`\n    const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${city}&key=65e76fc0f42384fc309cc50221644787`;\n    console.log('url');\n    // debugger\n    jsonp(url, {\n      param: 'callback'\n    }, (err, data) => {\n      console.log(data);\n      if (!err && data.status === \"1\") {\n        const {\n          weather,\n          winddirection,\n          windpower,\n          humidity\n        } = data.lives[0];\n        console.log('text:', weather);\n        resolve({\n          weather,\n          winddirection,\n          windpower,\n          humidity\n        });\n      } else {\n        _message.error('获取天气信息失败!');\n      }\n    });\n  });\n};\n// reqWeather('北京')","map":{"version":3,"names":["ajax","jsonp","BASE","reqLogin","username","password","reqGetCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProduct","pageNum","pageSize","reqSearchProduct","searchName","searchType","reqACategory","reqUpdateProduct","productId","status","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","reqWeather","city","Promise","resolve","reject","url","console","log","param","err","data","weather","winddirection","windpower","humidity","lives","error"],"sources":["/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/api/index.js"],"sourcesContent":["import ajax from \"./ajax\"\nimport jsonp from 'jsonp'\nimport { message } from \"antd\"\n\nconst BASE = '/api'\n//用户登录\nexport const reqLogin = (username, password) => ajax(BASE + '/login', { username, password }, 'POST')\n\n//获取一级/二级分类的列表\nexport const reqGetCategorys = (parentId) => ajax(BASE + '/manage/category/list', { parentId })\n//添加分类\nexport const reqAddCategory = (parentId, categoryName) => ajax(BASE + '/manage/category/add', { parentId, categoryName }, 'POST')\n//更新分类\nexport const reqUpdateCategory = (categoryId, categoryName) => ajax(BASE + '/manage/category/update', { categoryId, categoryName }, 'POST')\n\n//获取商品分页列表\n/*  */\nexport const reqProduct = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', { pageNum, pageSize })\n\n//搜索商品分页列表(根据商品名称/描述)\nexport const reqSearchProduct = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/manage/product/search',\n    {\n        pageNum,\n        pageSize,\n        [searchType]: searchName\n    })\n\n//获取一个分类\nexport const reqACategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\n\n//更新商品的状态(上架/下架)\nexport const reqUpdateProduct = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\n\n//删除图片\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\n\n//添加/更新商品\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + (product._id?'update':'add'), product, 'POST')\n\n// //更新商品\n// export const reqUpdateAProduct = (product) => ajax('/manage/product/update', product, 'POST')\n\n//获取所有角色列表\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\n\n//添加角色\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\n\n//更新角色\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\n\n//获取用户列表\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\n\n//删除用户\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\n\n// 添加/更新用户\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/' + (user._id ? 'update' : 'add'), user, \"POST\")\n\n// 获取天气\nexport const reqWeather = (city) => {\n    return new Promise((resolve, reject) => {\n        // const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p4 9MVra6urFRGOT9s8UBWr2`\n        const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${city}&key=65e76fc0f42384fc309cc50221644787`\n        console.log('url')\n        // debugger\n        jsonp(url, {\n            param: 'callback'\n        }, (err, data) => {\n            console.log(data)\n            if (!err && data.status === \"1\") {\n                const { weather, winddirection, windpower, humidity } = data.lives[0]\n                console.log('text:', weather)\n                resolve({weather, winddirection, windpower, humidity})\n            } else {\n                message.error('获取天气信息失败!')\n            }\n\n        })\n    })\n}\n// reqWeather('北京')"],"mappings":"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"},"metadata":{},"sourceType":"module"}