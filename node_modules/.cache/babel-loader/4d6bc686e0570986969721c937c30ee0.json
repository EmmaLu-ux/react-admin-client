{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/components/header/index.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./index.less\";\nimport { formateDate } from \"../../utils/dateUtils.js\";\n// import memoryUtils from \"../../utils/memoryUtils\";\n// import storageUtils from '../../utils/storageUtils'\nimport { reqWeather } from \"../../api/index\";\nimport LinkButton from \"../link-button\";\nimport { logout } from \"../../redux/actions\";\nconst {\n  confirm\n} = _Modal;\nclass Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentTime: formateDate(Date.now()),\n      //当前时间字符串\n      weather: \"\",\n      //天气\n      winddirection: \"\",\n      //西北风\n      windpower: \"\",\n      //风力\n      humidity: \"\" //湿度\n    };\n    this.getTime = () => {\n      this.intervalId = setInterval(() => {\n        const currentTime = formateDate(Date.now());\n        this.setState({\n          currentTime\n        });\n      }, 1000);\n    };\n    this.getWeather = async () => {\n      const {\n        weather,\n        winddirection,\n        windpower,\n        humidity\n      } = await reqWeather(\"330100\");\n      this.setState({\n        weather,\n        winddirection,\n        windpower,\n        humidity\n      });\n    };\n    this.logout = () => {\n      confirm({\n        title: \"确定退出登录吗?\",\n        okText: '确认',\n        cencelText: '取消',\n        buttonType: '',\n        // content: 'Some descriptions',\n        onOk: () => {\n          console.log(\"确认\");\n          //删除保存的数据\n          // storageUtils.deleteUser()\n          // memoryUtils.user = {}\n          this.props.logout();\n          // 跳转到login界面\n          // this.props.history.replace('/login')\n        },\n\n        onCancel() {\n          console.log(\"取消\");\n        }\n      });\n    };\n  }\n  //第一次render之后执行一次，一般在此执行异步操作：发ajax/启动定时器\n  componentDidMount() {\n    this.getTime();\n    this.getWeather();\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  render() {\n    const {\n      currentTime,\n      weather,\n      winddirection,\n      windpower,\n      humidity\n    } = this.state;\n    // const username = memoryUtils.user.username;\n    const username = this.props.user.username;\n    // const title = this.getTitle();\n    const title = this.props.headTitle; //用redux直接调用状态\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-top-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-top-left-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-top-left-curTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, currentTime), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-top-left-Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, weather, \", \", winddirection, \"\\u98CE\", windpower, \", \\u6E7F\\u5EA6: \", humidity)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-top-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"\\u6B22\\u8FCE, \", username), /*#__PURE__*/React.createElement(LinkButton, {\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"\\u9000\\u51FA\")));\n  }\n}\nexport default connect(state => ({\n  headTitle: state.headTitle,\n  user: state.user\n}), {\n  logout\n})(withRouter(Header));","map":{"version":3,"names":["React","Component","withRouter","connect","formateDate","reqWeather","LinkButton","logout","confirm","Header","state","currentTime","Date","now","weather","winddirection","windpower","humidity","getTime","intervalId","setInterval","setState","getWeather","title","okText","cencelText","buttonType","onOk","console","log","props","onCancel","componentDidMount","componentWillUnmount","clearInterval","render","username","user","headTitle"],"sources":["/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/components/header/index.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Modal } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport \"./index.less\";\nimport { formateDate } from \"../../utils/dateUtils.js\";\n// import memoryUtils from \"../../utils/memoryUtils\";\n// import storageUtils from '../../utils/storageUtils'\nimport { reqWeather } from \"../../api/index\";\nimport LinkButton from \"../link-button\";\nimport { logout } from \"../../redux/actions\";\n\nconst { confirm } = Modal;\nclass Header extends Component {\n  state = {\n    currentTime: formateDate(Date.now()), //当前时间字符串\n    weather: \"\", //天气\n    winddirection: \"\", //西北风\n    windpower: \"\", //风力\n    humidity: \"\", //湿度\n  };\n  getTime = () => {\n    this.intervalId = setInterval(() => {\n      const currentTime = formateDate(Date.now());\n      this.setState({ currentTime });\n    }, 1000);\n  };\n  getWeather = async () => {\n    const {weather, winddirection, windpower, humidity} = await reqWeather(\"330100\");\n    this.setState({ weather, winddirection, windpower, humidity });\n  };\n  /* 在没有使用redux管理状态的时候获取标题的方法 */\n  // getTitle = () => {\n  //   //得到当前请求路径\n  //   const path = this.props.location.pathname;\n  //   let title;\n  //   menuList.forEach((item) => {\n  //     if (item.key === path) {\n  //       title = item.title;\n  //     } else if (item.children) {\n  //       const cItem = item.children.find((cItem) => path.indexOf(cItem.key) === 0);\n  //       if (cItem) {\n  //         title = cItem.title;\n  //       }\n  //     }\n  //   });\n  //   return title;\n  // };\n  logout = () => {\n    confirm({\n      title: \"确定退出登录吗?\",\n      okText: '确认',\n      cencelText: '取消',\n      buttonType: '',\n      // content: 'Some descriptions',\n      onOk: () => {\n        console.log(\"确认\");\n        //删除保存的数据\n        // storageUtils.deleteUser()\n        // memoryUtils.user = {}\n        this.props.logout();\n        // 跳转到login界面\n        // this.props.history.replace('/login')\n      },\n      onCancel() {\n        console.log(\"取消\");\n      },\n    });\n  };\n  //第一次render之后执行一次，一般在此执行异步操作：发ajax/启动定时器\n  componentDidMount() {\n    this.getTime();\n    this.getWeather();\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const { currentTime, weather, winddirection, windpower, humidity } = this.state;\n    // const username = memoryUtils.user.username;\n    const username = this.props.user.username;\n    // const title = this.getTitle();\n    const title = this.props.headTitle; //用redux直接调用状态\n    return (\n      <div className=\"header-top\">\n        <div className=\"header-top-left\">\n          <div className=\"header-top-left-title\">{title}</div>\n            <div className=\"header-top-left-curTime\">{currentTime}</div>\n            <div className=\"header-top-left-Text\">{weather}, {winddirection}风{windpower}, 湿度: {humidity}</div>\n        </div>\n        <div className=\"header-top-right\">\n          <span>欢迎, {username}</span>\n          <LinkButton onClick={this.logout}>退出</LinkButton>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({ headTitle: state.headTitle, user: state.user }),\n  { logout }\n)(withRouter(Header));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}