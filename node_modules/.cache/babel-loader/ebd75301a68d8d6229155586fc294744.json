{"ast":null,"code":"import _objectSpread from\"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* 用来根据老的state和指定的action生成并返回新的state的函数 */import storageUtils from'../utils/storageUtils';import{combineReducers}from'redux';import{SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER}from'./action-types';/* 用来管理头部标题的reducer函数 */var initHeadTitle='首页';function headTitle(){var preState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initHeadTitle;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,data=action.data;switch(type){case SET_HEAD_TITLE:return data;default:return preState;}}/* 用来管理当前登录用户的reducer函数 */var initUser=storageUtils.getUser()||{};function user(){var preState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initUser;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,user=action.user,errorMsg=action.errorMsg;switch(type){case RECEIVE_USER:return user;case SHOW_ERROR_MSG:return _objectSpread(_objectSpread({},preState),{},{errorMsg:errorMsg});case RESET_USER:return{};default:return preState;}}/* 默认向外暴露的是合并产生的reducer函数\n管理的总的state的结构：\n{\n    headTitle: '首页',\n    user: {}\n} */export default combineReducers({headTitle:headTitle,user:user});","map":{"version":3,"names":["storageUtils","combineReducers","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","headTitle","preState","action","type","data","initUser","getUser","user","errorMsg"],"sources":["/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/redux/reducer.js"],"sourcesContent":["/* 用来根据老的state和指定的action生成并返回新的state的函数 */\nimport storageUtils from '../utils/storageUtils'\nimport {combineReducers} from 'redux'\n\nimport {SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER} from './action-types'\n\n/* 用来管理头部标题的reducer函数 */\nconst initHeadTitle = '首页'\nfunction headTitle(preState = initHeadTitle, action){\n    const {type, data} = action\n    switch (type) {\n        case SET_HEAD_TITLE:\n            return data\n        default: \n        return preState\n    }\n}\n/* 用来管理当前登录用户的reducer函数 */\nconst initUser = storageUtils.getUser() || {}\nfunction user(preState=initUser, action){\n    const {type, user, errorMsg} = action\n    switch (type) {\n        case RECEIVE_USER:\n            return user\n        case SHOW_ERROR_MSG:\n            return {...preState, errorMsg}\n        case RESET_USER:\n            return {}\n        default:\n            return preState\n    }\n}\n/* 默认向外暴露的是合并产生的reducer函数\n管理的总的state的结构：\n{\n    headTitle: '首页',\n    user: {}\n} */\nexport default combineReducers({\n    headTitle, user\n})\n"],"mappings":"oLAAA,0CACA,MAAOA,aAAY,KAAM,uBAAuB,CAChD,OAAQC,eAAe,KAAO,OAAO,CAErC,OAAQC,cAAc,CAAEC,YAAY,CAAEC,cAAc,CAAEC,UAAU,KAAO,gBAAgB,CAEvF,wBACA,GAAMC,cAAa,CAAG,IAAI,CAC1B,QAASC,UAAS,EAAkC,IAAjCC,SAAQ,2DAAGF,aAAa,IAAEG,OAAM,2CAC/C,GAAOC,KAAI,CAAUD,MAAM,CAApBC,IAAI,CAAEC,IAAI,CAAIF,MAAM,CAAdE,IAAI,CACjB,OAAQD,IAAI,EACR,IAAKR,eAAc,CACf,MAAOS,KAAI,CACf,QACA,MAAOH,SAAQ,EAEvB,CACA,0BACA,GAAMI,SAAQ,CAAGZ,YAAY,CAACa,OAAO,EAAE,EAAI,CAAC,CAAC,CAC7C,QAASC,KAAI,EAA2B,IAA1BN,SAAQ,2DAACI,QAAQ,IAAEH,OAAM,2CACnC,GAAOC,KAAI,CAAoBD,MAAM,CAA9BC,IAAI,CAAEI,IAAI,CAAcL,MAAM,CAAxBK,IAAI,CAAEC,QAAQ,CAAIN,MAAM,CAAlBM,QAAQ,CAC3B,OAAQL,IAAI,EACR,IAAKP,aAAY,CACb,MAAOW,KAAI,CACf,IAAKV,eAAc,CACf,sCAAWI,QAAQ,MAAEO,QAAQ,CAARA,QAAQ,GACjC,IAAKV,WAAU,CACX,MAAO,CAAC,CAAC,CACb,QACI,MAAOG,SAAQ,EAE3B,CACA;AACA;AACA;AACA;AACA;AACA,IACA,cAAeP,gBAAe,CAAC,CAC3BM,SAAS,CAATA,SAAS,CAAEO,IAAI,CAAJA,IACf,CAAC,CAAC"},"metadata":{},"sourceType":"module"}