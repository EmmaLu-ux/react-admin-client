{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tree/style\";\nimport _Tree from \"antd/es/tree\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/pages/role/auth-form.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport menuList from \"../../config/menuConfig\";\nconst Item = _Form.Item;\nconst {\n  TreeNode\n} = _Tree;\n\n/* 添加分类的form组件 */\nexport default class AuthForm extends Component {\n  /* 根据传入角色的menu生成初始状态 */\n  constructor(props) {\n    super(props);\n    this.onCheck = checkedKeys => {\n      console.log(\"onCheck\", checkedKeys);\n      this.setState({\n        checkedKeys\n      });\n    };\n    this.getTreeNodes = menuList => {\n      return menuList.reduce((pre, item) => {\n        pre.push( /*#__PURE__*/React.createElement(TreeNode, {\n          title: item.title,\n          key: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }\n        }, item.children ? this.getTreeNodes(item.children) : null));\n        return pre;\n      }, []);\n    };\n    this.getMenus = () => this.state.checkedKeys;\n    const {\n      menus\n    } = this.props.role;\n    this.state = {\n      checkedKeys: menus\n    };\n  }\n  /* 选中某个node时的回调 */\n\n  componentWillMount() {\n    this.treeNodes = this.getTreeNodes(menuList);\n  }\n  /* 根据新传入的role来更新checkedKeys状态\n  当组件接收到新的属性时自动调用 */\n  componentWillReceiveProps(nextProps) {\n    console.log(\"componentWillReceiveProps()\", nextProps);\n    const menus = nextProps.role.menus;\n    this.setState({\n      checkedKeys: menus\n    });\n    // this.state.checkedKeys = menus\n  }\n\n  render() {\n    console.log(\"AuthForm render()\");\n    const {\n      role\n    } = this.props;\n    const {\n      checkedKeys\n    } = this.state;\n    // const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    return /*#__PURE__*/React.createElement(_Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Item, Object.assign({\n      label: \"\\u89D2\\u8272\\u540D\\u79F0\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Input, {\n      value: role.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(_Tree, {\n      onCheck: this.onCheck,\n      checkable: true,\n      defaultExpandAll: true,\n      checkedKeys: checkedKeys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TreeNode, {\n      title: \"\\u5E73\\u53F0\\u6743\\u9650\",\n      key: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, this.treeNodes)));\n  }\n}\nAuthForm.propTypes = {\n  role: PropTypes.object\n};","map":{"version":3,"names":["React","Component","PropTypes","menuList","Item","TreeNode","AuthForm","constructor","props","onCheck","checkedKeys","console","log","setState","getTreeNodes","reduce","pre","item","push","title","key","children","getMenus","state","menus","role","componentWillMount","treeNodes","componentWillReceiveProps","nextProps","render","formItemLayout","labelCol","span","wrapperCol","name","propTypes","object"],"sources":["/Users/emmalu/Documents/fronted/workspace/react-admin_client-1/src/pages/role/auth-form.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Tree } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport menuList from \"../../config/menuConfig\";\n\nconst Item = Form.Item;\nconst { TreeNode } = Tree;\n\n/* 添加分类的form组件 */\nexport default class AuthForm extends Component {\n  static propTypes = {\n    role: PropTypes.object,\n  };\n  /* 根据传入角色的menu生成初始状态 */\n  constructor(props) {\n    super(props);\n    const { menus } = this.props.role;\n    this.state = {\n      checkedKeys: menus,\n    };\n  }\n  /* 选中某个node时的回调 */\n  onCheck = (checkedKeys) => {\n    console.log(\"onCheck\", checkedKeys);\n    this.setState({ checkedKeys });\n  };\n  getTreeNodes = (menuList) => {\n    return menuList.reduce((pre, item) => {\n      pre.push(\n        <TreeNode title={item.title} key={item.key}>\n          {item.children ? this.getTreeNodes(item.children) : null}\n        </TreeNode>\n      );\n      return pre;\n    }, []);\n  };\n  getMenus = () => this.state.checkedKeys;\n  componentWillMount() {\n    this.treeNodes = this.getTreeNodes(menuList);\n  }\n  /* 根据新传入的role来更新checkedKeys状态\n  当组件接收到新的属性时自动调用 */\n  componentWillReceiveProps(nextProps) {\n    console.log(\"componentWillReceiveProps()\", nextProps);\n    const menus = nextProps.role.menus;\n    this.setState({\n      checkedKeys: menus,\n    });\n    // this.state.checkedKeys = menus\n  }\n  render() {\n    console.log(\"AuthForm render()\");\n    const { role } = this.props;\n    const { checkedKeys } = this.state;\n    // const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 5 },\n      wrapperCol: { span: 16 },\n    };\n    return (\n      <Form>\n        <Item label=\"角色名称\" {...formItemLayout}>\n          <Input value={role.name} disabled />\n        </Item>\n        <Tree\n          onCheck={this.onCheck}\n          checkable\n          defaultExpandAll={true}\n          checkedKeys={checkedKeys}\n        >\n          <TreeNode title=\"平台权限\" key=\"all\">\n            {this.treeNodes}\n          </TreeNode>\n        </Tree>\n      </Form>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}